[{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"file provides guidance Claude Code (claude.ai/code) working code repository.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"CLAUDE.md","text":"fmridesign R package constructing design matrices functional magnetic resonance imaging (fMRI) analyses. provides tools creating event models flexible hemodynamic response functions (HRFs) baseline models nuisance regression.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"build-and-check","dir":"","previous_headings":"Key Development Commands","what":"Build and Check","title":"CLAUDE.md","text":"","code":"# Build the package devtools::build()  # Check the package (includes running tests) devtools::check()  # Install the package locally devtools::install()  # Load the package for development devtools::load_all()"},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"testing","dir":"","previous_headings":"Key Development Commands","what":"Testing","title":"CLAUDE.md","text":"","code":"# Run all tests devtools::test()  # Run a specific test file testthat::test_file(\"tests/testthat/test-event_model.R\")  # Run tests with coverage covr::package_coverage()"},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"documentation","dir":"","previous_headings":"Key Development Commands","what":"Documentation","title":"CLAUDE.md","text":"","code":"# Generate documentation from roxygen2 comments devtools::document()  # Build vignettes devtools::build_vignettes()  # Check examples in documentation devtools::run_examples()"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"core-components","dir":"","previous_headings":"Architecture","what":"Core Components","title":"CLAUDE.md","text":"Main entry point: event_model() function Handles formula-based (onset ~ hrf(condition)) list-based interfaces Uses three-stage pipeline: parse → realise → build design matrix Column naming: term_tag_condition_tag_b## (e.g., condition_A_b01) Main entry point: baseline_model() function Handles drift correction (polynomial, B-splines, natural splines) Supports block-wise intercepts nuisance regressors Uses block-diagonal matrix construction Depends fmrihrf package hemodynamic response functions Supports multiple HRF bases (canonical, SPM derivatives, FIR, etc.) Formula interface uses hrf() function specify terms event baseline models produce design matrices via design_matrix() generic Matrices block-structured multi-run experiments Column indices tracked term-wise operations","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"key-design-patterns","dir":"","previous_headings":"Architecture","what":"Key Design Patterns","title":"CLAUDE.md","text":"S3 Object System: Uses S3 classes throughout (event_model, baseline_model, convolved_term, etc.) Generic Functions: design_matrix(), conditions(), terms(), construct() Formula Interface: Leverages R’s formula syntax model specification Tidy Data: Returns tibbles design matrices, uses tidyverse functions internally","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"dependencies","dir":"","previous_headings":"Architecture","what":"Dependencies","title":"CLAUDE.md","text":"Core: fmrihrf (HRF functions), Matrix (sparse matrices), splines Tidyverse: dplyr, tidyr, purrr, tibble Validation: assertthat, rlang Visualization: ggplot2, plotly","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/CLAUDE.html","id":"important-considerations","dir":"","previous_headings":"","what":"Important Considerations","title":"CLAUDE.md","text":"Block Structure: fMRI data organized blocks/runs. operations respect structure. Sampling Frame: sampling_frame object (fmrihrf) defines timing information required models. Column Naming: package uses consistent naming scheme design matrix columns avoid clashes maintain interpretability. Contrast Specifications: Contrasts can defined within HRF terms propagated full design matrix.","code":""},{"path":[]},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/PACKAGE_STATUS.html","id":"vignettes","dir":"","previous_headings":"Current State: ✅ FULLY FUNCTIONAL","what":"Vignettes","title":"fmridesign Package Status","text":"✅ 4 vignettes build successfully ✅ examples run without errors ✅ Visualization methods (plot, design_map, correlation_map) working","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/PACKAGE_STATUS.html","id":"tests","dir":"","previous_headings":"Current State: ✅ FULLY FUNCTIONAL","what":"Tests","title":"fmridesign Package Status","text":"✅ 623 tests passing ✅ 0 failures ⚠️ 14 warnings (expected - related duplicate column name handling)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/PACKAGE_STATUS.html","id":"documentation","dir":"","previous_headings":"Current State: ✅ FULLY FUNCTIONAL","what":"Documentation","title":"fmridesign Package Status","text":"✅ functions documented ✅ NAMESPACE properly configured ✅ Dependencies correctly specified","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/PACKAGE_STATUS.html","id":"key-components-working","dir":"","previous_headings":"Current State: ✅ FULLY FUNCTIONAL","what":"Key Components Working","title":"fmridesign Package Status","text":"Event Models: Formula-based interface creating fMRI design matrices Baseline Models: Drift terms, nuisance regressors, block intercepts HRF System: Multiple HRF types basis functions Visualization: Design matrix heatmaps, correlation plots, time series plots Contrasts: Flexible contrast specification system","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/PACKAGE_STATUS.html","id":"integration-with-other-packages","dir":"","previous_headings":"Current State: ✅ FULLY FUNCTIONAL","what":"Integration with Other Packages","title":"fmridesign Package Status","text":"✅ Works fmrihrf HRF functions sampling frames ✅ Separated fmrireg modular design ✅ Uses ggplot2 visualization","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/PACKAGE_STATUS.html","id":"next-steps-optional","dir":"","previous_headings":"Current State: ✅ FULLY FUNCTIONAL","what":"Next Steps (Optional)","title":"fmridesign Package Status","text":"Add examples documentation Create package website pkgdown Submit CRAN (addressing minor notes) Add vignettes advanced use cases","code":""},{"path":[]},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/VIGNETTE_FIXES_SUMMARY.html","id":"id_1-namespace-conflict-with-evaluate-function","dir":"","previous_headings":"Issues Fixed","what":"1. Namespace conflict with evaluate function","title":"Summary of Vignette Fixes for fmridesign Package","text":"Problem: fmrihrf’s internal .memo_hrf function called evaluate() without namespace prefix, conflicting knitr’s evaluate Resolution: User fixed bug fmrihrf qualifying call fmrihrf::evaluate() Action taken: Removed workarounds vignettes fix","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/VIGNETTE_FIXES_SUMMARY.html","id":"id_2-missing-design_map-functionality","dir":"","previous_headings":"Issues Fixed","what":"2. Missing design_map functionality","title":"Summary of Vignette Fixes for fmridesign Package","text":"Problem: design_map accidentally left fmrireg fmridesign extracted design_map.event_model() - visualizes design matrix heatmap correlation_map.event_model() - visualizes correlation matrix plot.event_model() - plots predicted BOLD timecourses Key fix: Updated grep pattern plot method handle underscore separators column names","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/VIGNETTE_FIXES_SUMMARY.html","id":"id_3-documentation-and-namespace-issues","dir":"","previous_headings":"Issues Fixed","what":"3. Documentation and namespace issues","title":"Summary of Vignette Fixes for fmridesign Package","text":"Fixed parameter documentation baseline_model methods Added blockid allrows parameters design_matrix.baseline_model Fixed S3 method signature labels.event (changed x object) stats::contr.sum contrast matrices stats::sd standard deviation rlang::= tidy evaluation Created missing matrix_term() internal function","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/VIGNETTE_FIXES_SUMMARY.html","id":"a_02_regressorrmd","dir":"","previous_headings":"Issues Fixed > 4. Vignette-specific fixes","what":"a_02_regressor.Rmd","title":"Summary of Vignette Fixes for fmridesign Package","text":"Changed onsets(reg) reg$onsets direct field access Updated references use fmrihrf methods correctly","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/VIGNETTE_FIXES_SUMMARY.html","id":"a_03_baseline_modelrmd","dir":"","previous_headings":"Issues Fixed > 4. Vignette-specific fixes","what":"a_03_baseline_model.Rmd","title":"Summary of Vignette Fixes for fmridesign Package","text":"Added time blockids fields sampling_frame plotting: Fixed term names “poly” “drift”","code":"sframe$time <- fmrihrf::samples(sframe_raw, global = TRUE) sframe$blockids <- fmrihrf::blockids(sframe_raw)"},{"path":"https://bbuchsbaum.github.io/fmridesign/VIGNETTE_FIXES_SUMMARY.html","id":"a_04_event_modelsrmd","dir":"","previous_headings":"Issues Fixed > 4. Vignette-specific fixes","what":"a_04_event_models.Rmd","title":"Summary of Vignette Fixes for fmridesign Package","text":"Changed library(fmrireg) library(fmridesign) Fixed plot calls removed faceting didn’t work multiple blocks Fixed RT_centered term plotting updating grep pattern","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/VIGNETTE_FIXES_SUMMARY.html","id":"current-status","dir":"","previous_headings":"","what":"Current Status","title":"Summary of Vignette Fixes for fmridesign Package","text":"vignettes build successfully R CMD check passes minor notes hidden .claude directory Package ready use","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to fmridesign","text":"fmridesign helps build fMRI design matrices cleanly consistently. covers task regressors (events convolved HRFs) baseline/nuisance terms (drift, intercepts, motion). use simple formula interface define models, visualize inspect , feed matrices GLM workflow. Key ideas: event models (task effects), baseline models (drift nuisance), clear naming, plots make easy spot problems.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"the-fmri-design-matrix","dir":"Articles","previous_headings":"","what":"The fMRI Design Matrix","title":"Introduction to fmridesign","text":"fMRI analysis, design matrix (X) fundamental general linear model: : - Y: Observed BOLD signal time series - X: Design matrix containing predictors - β: Parameter estimates (regression coefficients) - ε: Error term (noise) design matrix typically combines task-related predictors (expected responses events) nuisance predictors (drift, motion, physiology). essential reliable inference.","code":"Y = Xβ + ε"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"package-architecture","dir":"Articles","previous_headings":"","what":"Package Architecture","title":"Introduction to fmridesign","text":"Design construction split two parts: Event models (event_model()): specify onsets (optional durations), choose HRF basis per term, include factors, continuous modulators, covariates. Baseline models (baseline_model()): add drift terms (polynomial/spline/constant), block-wise intercepts, nuisance regressors provide.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"quick-start-complete-workflow","dir":"Articles","previous_headings":"","what":"Quick Start: Complete Workflow","title":"Introduction to fmridesign","text":"’s minimal example demonstrating complete workflow experimental design design matrix:","code":"# 1. Define the temporal structure (2 runs, 150 scans each, TR = 2s) TR <- 2 sframe <- sampling_frame(blocklens = c(150, 150), TR = TR)  # 2. Create experimental events set.seed(123) # Simple two-condition design with 20 events per run conditions <- rep(c(\"A\", \"B\"), each = 10, times = 2) onsets <- c(   sort(runif(20, 0, 150 * TR - 10)),  # Run 1   sort(runif(20, 0, 150 * TR - 10))   # Run 2 ) blockids <- rep(1:2, each = 20)  # 3. Build the event model emodel <- event_model(   onset ~ hrf(Condition, basis = \"spmg1\"),   data = data.frame(     onset = onsets,     Condition = factor(conditions),     block = factor(blockids)   ),   block = ~ block,   sampling_frame = sframe )  # 4. Build the baseline model bmodel <- baseline_model(   basis = \"poly\",   degree = 3,   sframe = sframe )  # 5. Extract design matrices X_task <- design_matrix(emodel) X_baseline <- design_matrix(bmodel)  # 6. Combine into full design matrix X_full <- cbind(X_task, X_baseline) dim(X_full) #> [1] 300  10  # 7. Visualize the complete design plot(emodel)"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"sampling-frame","dir":"Articles","previous_headings":"Understanding the Components","what":"Sampling Frame","title":"Introduction to fmridesign","text":"sampling_frame object defines temporal structure fMRI data:","code":"# Single run: 200 scans, TR = 2 seconds sframe_single <- sampling_frame(blocklens = 200, TR = 2) print(sframe_single) #> Sampling Frame #> ============== #>  #> Structure: #>   1 block #>   Total scans: 200 #>  #> Timing: #>   TR: 2 s #>   Precision: 0.1 s #>  #> Duration: #>   Total time: 400.0 s  # Multiple runs: 3 runs with different lengths sframe_multi <- sampling_frame(blocklens = c(150, 200, 150), TR = 2) print(sframe_multi) #> Sampling Frame #> ============== #>  #> Structure: #>   3 blocks #>   Total scans: 500 #>  #> Timing: #>   TR: 2 s #>   Precision: 0.1 s #>  #> Duration: #>   Total time: 1000.0 s"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"event-specification","dir":"Articles","previous_headings":"Understanding the Components","what":"Event Specification","title":"Introduction to fmridesign","text":"Events typically specified formula interface:","code":"# Formula interface (recommended) emodel_formula <- event_model(   onset ~ hrf(condition) + hrf(RT, basis = \"gaussian\"),   data = data.frame(     onset = c(10, 30, 50, 70),     condition = factor(c(\"easy\", \"hard\", \"easy\", \"hard\")),     RT = c(0.5, 0.8, 0.4, 0.9),     block = factor(c(1, 1, 1, 1))   ),   block = ~ block,   sampling_frame = sampling_frame(100, TR = 2) )"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"block-design","dir":"Articles","previous_headings":"Common Use Cases","what":"1. Block Design","title":"Introduction to fmridesign","text":"","code":"# Block design with 20-second blocks block_onsets <- seq(0, 280, by = 40) block_conditions <- rep(c(\"task\", \"rest\"), length.out = length(block_onsets)) block_durations <- rep(20, length(block_onsets))  emodel_block <- event_model(   onset ~ hrf(condition),   data = data.frame(     onset = block_onsets,     condition = factor(block_conditions),     block = factor(rep(1, length(block_onsets)))   ),   block = ~ block,   durations = block_durations,   sampling_frame = sampling_frame(150, TR = 2) )  plot(emodel_block)"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"rapid-event-related-design","dir":"Articles","previous_headings":"Common Use Cases","what":"2. Rapid Event-Related Design","title":"Introduction to fmridesign","text":"","code":"# Rapid event-related with jittered ISI set.seed(456) n_events <- 60 rapid_onsets <- cumsum(runif(n_events, 2, 6))  # ISI between 2-6s rapid_conditions <- sample(c(\"face\", \"house\", \"object\"), n_events, replace = TRUE)  emodel_rapid <- event_model(   onset ~ hrf(stimulus),   data = data.frame(     onset = rapid_onsets,     stimulus = factor(rapid_conditions),     block = factor(rep(1, n_events))   ),   block = ~ block,   sampling_frame = sampling_frame(ceiling(max(rapid_onsets)/2) + 20, TR = 2) )  # Check design efficiency cor(design_matrix(emodel_rapid)) #>                          stimulus_stimulus.face stimulus_stimulus.house #> stimulus_stimulus.face                1.0000000             -0.29766943 #> stimulus_stimulus.house              -0.2976694              1.00000000 #> stimulus_stimulus.object             -0.3687703             -0.09145211 #>                          stimulus_stimulus.object #> stimulus_stimulus.face                -0.36877029 #> stimulus_stimulus.house               -0.09145211 #> stimulus_stimulus.object               1.00000000"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"parametric-modulation","dir":"Articles","previous_headings":"Common Use Cases","what":"3. Parametric Modulation","title":"Introduction to fmridesign","text":"","code":"# Event-related design with RT modulation set.seed(789) n_trials <- 30 pm_onsets <- sort(runif(n_trials, 0, 200)) pm_conditions <- rep(c(\"congruent\", \"incongruent\"), length.out = n_trials) pm_RT <- rnorm(n_trials, mean = ifelse(pm_conditions == \"congruent\", 0.5, 0.7), sd = 0.1)  emodel_parametric <- event_model(   onset ~ hrf(condition) + hrf(RT),   data = data.frame(     onset = pm_onsets,     condition = factor(pm_conditions),     RT = scale(pm_RT)[,1],  # Center the parametric modulator     block = factor(rep(1, n_trials))   ),   block = ~ block,   sampling_frame = sampling_frame(120, TR = 2) )  # Visualize the parametric modulator plot(emodel_parametric, term_name = \"RT\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"integration-with-fmri-analysis","dir":"Articles","previous_headings":"","what":"Integration with fMRI Analysis","title":"Introduction to fmridesign","text":"design matrices created fmridesign can used various fMRI analysis approaches:","code":"# Example: Export for use with external software X <- cbind(design_matrix(emodel), design_matrix(bmodel))  # Save as text file for SPM, FSL, or AFNI write.table(X, \"design_matrix.txt\", row.names = FALSE, col.names = TRUE)  # For use with R-based analysis # Assuming Y is your fMRI time series data # fit <- lm(Y ~ X - 1)  # -1 removes intercept as it's in the design  # Or use with specialized fMRI packages # library(fmri) # results <- fmri_glm(Y, X)"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"Introduction to fmridesign","text":"Always inspect design. Look sensible timing, HRF shapes match expectations, acceptable correlations among regressors. Plan efficiency (jitter balance help), match baseline flexibility run length (short runs need fewer drift terms long ones). Include relevant nuisance regressors available (e.g., motion, physiology, artifact/outlier flags).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Introduction to fmridesign","text":"detailed information, see following vignettes: vignette(\"a_03_baseline_model\"): -depth coverage baseline nuisance modeling vignette(\"a_04_event_models\"): Comprehensive guide event model specification Visit fmrihrf package documentation HRF details","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_01_introduction.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"Introduction to fmridesign","text":"encounter issues questions: Check function documentation: ?event_model, ?baseline_model Browse available HRFs: list_available_hrfs() Report issues: GitHub Issues","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_03_baseline_model.html","id":"the-purpose-of-a-baseline-model","dir":"Articles","previous_headings":"","what":"The Purpose of a Baseline Model","title":"Modeling Baseline and Nuisance Effects","text":"fMRI analysis, BOLD signal contains task-related activity also various sources noise drift. baseline model aims capture account non-neuronal variance, ensuring estimates task effects accurate. baseline regressors typically model low-frequency scanner drift (using basis functions) known sources noise like head motion parameters physiological fluctuations. fmridesign uses baseline_model() function construct part design matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_03_baseline_model.html","id":"modeling-drift-with-basis-functions","dir":"Articles","previous_headings":"","what":"Modeling Drift with Basis Functions","title":"Modeling Baseline and Nuisance Effects","text":"common approach modeling slow scanner drift include set basis functions model run. fmridesign supports several basis sets specified via basis argument: \"poly\": Polynomial functions (orthogonalized). Use degree poly_degree specify order. \"bs\": B-spline basis functions. Use degree specify number splines. \"ns\": Natural spline basis functions. Use degree specify number splines. \"constant\": Includes intercept term run. basis functions generated separately scanning run defined sampling_frame.","code":"# Define a sampling frame for two runs of 100 scans each, TR=2s TR <- 2 sframe <- sampling_frame(blocklens = c(100, 100), TR = TR)  # 1. Polynomial Basis (degree 5) bmodel_poly <- baseline_model(basis = \"poly\", degree = 5, sframe = sframe) print(bmodel_poly) #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_poly_5               #>     * Basis type: poly                    #>     * Degree: 5                           #>     * Drift columns: 10                   #>  #>   Additional Components                     #>     * Constant columns: 2                 #>     * Nuisance columns: 0                 #>  #>   Model Summary                             #>     * Total columns: 12                   #>  #>   Design Matrix Preview                     #>     -0.171  0.217 -0.249  0.271 ...       #>     -0.168  0.204 -0.219  0.217 ...       #>     -0.165  0.191 -0.190  0.167 ...       #> ================================================  # 2. B-spline Basis (degree 5) bmodel_bs <- baseline_model(basis = \"bs\", degree = 5, sframe = sframe) print(bmodel_bs) #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_bs_5                 #>     * Basis type: bs                      #>     * Degree: 5                           #>     * Drift columns: 10                   #>  #>   Additional Components                     #>     * Constant columns: 2                 #>     * Nuisance columns: 0                 #>  #>   Model Summary                             #>     * Total columns: 12                   #>  #>   Design Matrix Preview                     #>      0.000  0.000  0.000  0.000 ...       #>      0.048  0.001  0.000  0.000 ...       #>      0.093  0.004  0.000  0.000 ...       #> ================================================  # 3. Natural Spline Basis (degree 5) bmodel_ns <- baseline_model(basis = \"ns\", degree = 5, sframe = sframe) print(bmodel_ns) #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_ns_5                 #>     * Basis type: ns                      #>     * Degree: 5                           #>     * Drift columns: 10                   #>  #>   Additional Components                     #>     * Constant columns: 2                 #>     * Nuisance columns: 0                 #>  #>   Model Summary                             #>     * Total columns: 12                   #>  #>   Design Matrix Preview                     #>      0.000  0.000  0.000  0.000 ...       #>      0.000  0.000 -0.013  0.038 ...       #>      0.000  0.000 -0.026  0.077 ...       #> ================================================  # 4. Constant Basis (Intercept only per run) bmodel_const <- baseline_model(basis = \"constant\", sframe = sframe) print(bmodel_const) #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_constant_1           #>     * Basis type: constant                #>     * Degree: 1                           #>     * Drift columns: 2                    #>  #>   Additional Components                     #>     * Constant columns: 0                 #>     * Nuisance columns: 0                 #>  #>   Model Summary                             #>     * Total columns: 2                    #>  #>   Design Matrix Preview                     #>      1.000  0.000                         #>      1.000  0.000                         #>      1.000  0.000                         #> ================================================"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_03_baseline_model.html","id":"visualizing-baseline-regressors","dir":"Articles","previous_headings":"","what":"Visualizing Baseline Regressors","title":"Modeling Baseline and Nuisance Effects","text":"can use plot() visualize generated regressors. function returns ggplot object. Term Naming (clarification): - Term keys: drift/block/nuisance (use term_name plotting). - Column names: typically prefixed baseline spec (e.g., baseline_poly_5_b##). constant block term named constant_* present. Custom nuisance columns use nuisance term key internal column labels. Plotting Specific Terms: can plot specific terms using term_name argument. plotting function supports partial matching, can often use shorter names like \"poly\", \"bs\", \"nuisance\" uniquely identify term.    Notice regressors generated independently block (run) specified sampling_frame.","code":"# Plot the polynomial regressors (term is named \"drift\") plot(bmodel_poly, term_name = \"drift\") # Plot the B-spline regressors plot(bmodel_bs, term_name = \"drift\") # Plot the Natural spline regressors plot(bmodel_ns, term_name = \"drift\") # Plotting the Constant (Intercept) term is generally not informative print(bmodel_const) # Shows it has a 'constant' term #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_constant_1           #>     * Basis type: constant                #>     * Degree: 1                           #>     * Drift columns: 2                    #>  #>   Additional Components                     #>     * Constant columns: 0                 #>     * Nuisance columns: 0                 #>  #>   Model Summary                             #>     * Total columns: 2                    #>  #>   Design Matrix Preview                     #>      1.000  0.000                         #>      1.000  0.000                         #>      1.000  0.000                         #> ================================================"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_03_baseline_model.html","id":"intercept-control","dir":"Articles","previous_headings":"","what":"Intercept Control","title":"Modeling Baseline and Nuisance Effects","text":"intercept argument controls whether additional intercept columns added beyond drift term: - \"runwise\": adds one intercept per run (default non-constant bases). - \"global\": adds single global intercept across runs. - \"none\": adds extra intercepts. Note \"constant\" basis already provides constant drift term.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_03_baseline_model.html","id":"adding-arbitrary-nuisance-regressors","dir":"Articles","previous_headings":"","what":"Adding Arbitrary Nuisance Regressors","title":"Modeling Baseline and Nuisance Effects","text":"Beyond structured drift terms, often want include regressors derived data (e.g., motion parameters, physiological recordings, CSF signal). can added using nuisance_list argument. Important: nuisance_list must list element corresponds scanning run. element data.frame matrix containing nuisance regressors specific run. grouped term name \"nuisance\".","code":"# Simulate nuisance regressors (e.g., 6 motion parameters) n_scans_run1 <- blocklens(sframe)[1] n_scans_run2 <- blocklens(sframe)[2]  # Create nuisance data frames for each run nuis_run1 <- as.data.frame(matrix(rnorm(n_scans_run1 * 6), n_scans_run1, 6)) names(nuis_run1) <- paste0(\"motion_\", 1:6)  nuis_run2 <- as.data.frame(matrix(rnorm(n_scans_run2 * 6), n_scans_run2, 6)) names(nuis_run2) <- paste0(\"motion_\", 1:6)  # Combine into a list nuisance_regressors <- list(nuis_run1, nuis_run2)  # Create a baseline model including only these nuisance regressors # (Set basis = NULL, degree = 0 to exclude drift terms) bmodel_nuis_only <- baseline_model(basis = NULL, degree = 0, sframe = sframe,                                   nuisance_list = nuisance_regressors) print(bmodel_nuis_only) #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_constant_1           #>     * Basis type: constant                #>     * Degree: 1                           #>     * Drift columns: 2                    #>  #>   Additional Components                     #>     * Constant columns: 0                 #>     * Nuisance columns: 12                #>  #>   Model Summary                             #>     * Total columns: 14                   #>  #>   Design Matrix Preview                     #>      1.000  0.000 -1.400 -0.387 ...       #>      1.000  0.000  0.255 -0.785 ...       #>      1.000  0.000 -2.437 -1.057 ...       #> ================================================  # Plot the nuisance regressors (term_name = \"nuisance\") plot(bmodel_nuis_only, term_name = \"nuisance\") +    labs(title = \"Nuisance Regressors Only (e.g., Motion)\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_03_baseline_model.html","id":"combining-basis-sets-and-nuisance-regressors","dir":"Articles","previous_headings":"","what":"Combining Basis Sets and Nuisance Regressors","title":"Modeling Baseline and Nuisance Effects","text":"can include structured basis set (like polynomials) custom nuisance regressors baseline model.","code":"bmodel_combined <- baseline_model(basis = \"poly\", degree = 5, sframe = sframe,                                    nuisance_list = nuisance_regressors) print(bmodel_combined) #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_poly_5               #>     * Basis type: poly                    #>     * Degree: 5                           #>     * Drift columns: 10                   #>  #>   Additional Components                     #>     * Constant columns: 2                 #>     * Nuisance columns: 12                #>  #>   Model Summary                             #>     * Total columns: 24                   #>  #>   Design Matrix Preview                     #>     -0.171  0.217 -0.249  0.271 ...       #>     -0.168  0.204 -0.219  0.217 ...       #>     -0.165  0.191 -0.190  0.167 ...       #> ================================================  # Check the terms included term_names <- names(terms(bmodel_combined)) print(term_names) # e.g., constant, baseline_poly_5, nuisance #> [1] \"drift\"    \"block\"    \"nuisance\" terms(bmodel_combined) # List all terms in the model #> $drift #> fmri_term:  baseline_term  #>   Term Name:  baseline_poly_5  #>   Num Rows:  200  #>   Num Columns:  10  #>  #> $block #> fmri_term:  baseline_term  #>   Term Name:  constant  #>   Num Rows:  200  #>   Num Columns:  2  #>  #> $nuisance #> fmri_term:  baseline_term  #>   Term Name:  nuisance  #>   Num Rows:  200  #>   Num Columns:  12  # Plot the drift terms (polynomial basis) plot(bmodel_combined, term_name = \"drift\") +    labs(title = \"Polynomial Drift Terms (from Combined Model)\") # Plot the nuisance terms (using exact match \"nuisance\") plot(bmodel_combined, term_name = \"nuisance\") +    labs(title = \"Nuisance Terms (from Combined Model)\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_03_baseline_model.html","id":"accessing-the-design-matrix","dir":"Articles","previous_headings":"","what":"Accessing the Design Matrix","title":"Modeling Baseline and Nuisance Effects","text":"full design matrix baseline model (containing basis nuisance regressors, properly formatted per block) can obtained using design_matrix(). baseline design matrix combined task-related design matrix (event_model) within functions like fmri_model fmri_lm create complete design matrix GLM analysis.","code":"dmat_baseline <- design_matrix(bmodel_combined)  cat(\"Dimensions of baseline design matrix:\", dim(dmat_baseline), \"\\n\") #> Dimensions of baseline design matrix: 200 24 cat(\"Column names:\", paste(colnames(dmat_baseline)[1:10], \"...\"), \"\\n\") #> Column names: base_poly1_block_1 ... base_poly2_block_1 ... base_poly3_block_1 ... base_poly4_block_1 ... base_poly5_block_1 ... base_poly1_block_2 ... base_poly2_block_2 ... base_poly3_block_2 ... base_poly4_block_2 ... base_poly5_block_2 ...  head(dmat_baseline[, 1:8]) # Show first few columns #> # A tibble: 6 × 8 #>   base_poly1_block_1 base_poly2_block_1 base_poly3_block_1 base_poly4_block_1 #>                <dbl>              <dbl>              <dbl>              <dbl> #> 1             -0.171              0.217             -0.249             0.271  #> 2             -0.168              0.204             -0.219             0.217  #> 3             -0.165              0.191             -0.190             0.167  #> 4             -0.161              0.178             -0.163             0.122  #> 5             -0.158              0.166             -0.137             0.0813 #> 6             -0.154              0.154             -0.113             0.0452 #> # ℹ 4 more variables: base_poly5_block_1 <dbl>, base_poly1_block_2 <dbl>, #> #   base_poly2_block_2 <dbl>, base_poly3_block_2 <dbl>  # Visualize the full baseline matrix as a heatmap (optional) # design_map.baseline_model(bmodel_combined, rotate_x_text = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"introduction-modeling-task-effects","dir":"Articles","previous_headings":"","what":"Introduction: Modeling Task Effects","title":"Building Event Models","text":"event model describes expected BOLD signal changes related experimental events (stimuli, conditions, responses, etc.). forms core task-related component fMRI General Linear Model (GLM). fmridesign primarily uses event_model() function create models. takes experimental design information (event onsets, conditions, durations) combines Hemodynamic Response Function (HRF) specifications generate task regressors. vignette focuses common formula-based interface event_model(). ’s also list-based interface (event_model.list) programmatic create_event_model() function advanced use cases.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"quick-hrf-primer","dir":"Articles","previous_headings":"","what":"Quick HRF Primer","title":"Building Event Models","text":"Hemodynamic Response Function (HRF) maps brief neural events predicted BOLD signal changes via convolution. practice, event_model() builds set regressors convolving event train HRF HRF basis. : function basis set describing BOLD impulse response. ’s used: event onsets (durations) convolved HRF produce regressors GLM. Canonical vs. bases: single-shape canonical HRFs (e.g., SPMG1) vs. multi-basis sets (e.g., SPMG2/3, tent/FIR, B-splines) allow response-shape flexibility. Durations: events can modeled sticks (0 duration) boxcars (nonzero duration) convolution, depending design. Sampling: regressors generated sampling frame defined TR run lengths; fmrihrf handles appropriate interpolation/upsampling needed. HRFs live now: HRF definitions, generators, helpers moved fmrihrf package. See ?hrf, list_available_hrfs(), gen_hrf() fmrihrf details.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"timing-sampling-notes","dir":"Articles","previous_headings":"Quick HRF Primer","what":"Timing & Sampling Notes","title":"Building Event Models","text":"sampling_frame(TR, blocklens): defines time grid design matrix (rows = scans). durations: nonzero, events boxcars convolved HRF; effective sampling uses internal precision accuracy. precision: controls oversampling convolution; lower values increase accuracy cost compute.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"a-simple-single-factor-design-single-run","dir":"Articles","previous_headings":"","what":"A Simple Single-Factor Design (Single Run)","title":"Building Event Models","text":"Consider basic design four stimulus types (face, scene, tool, object), presented 4 times 2s, separated variable ISI (4-7s). total scan duration 70 TRs (TR=2s). Now, create event_model. formula onset ~ hrf(stim) specifies : onset column simple_design containing event start times. hrf(stim) defines term stim factor levels determine conditions. level convolved default HRF (HRF_SPMG1). block = ~ run argument links events scanning runs (, just one run).","code":"TR <- 2 cond <- c(\"face\", \"scene\", \"tool\", \"object\") NSTIM <- length(cond) * 4  # Construct the design table set.seed(123) # for reproducibility simple_design <- data.frame(   stim = factor(sample(rep(cond, 4))),   ISI = sample(10:20, NSTIM, replace = TRUE),  # Increased ISI range for better spacing   run = rep(1, NSTIM),   trial = factor(1:NSTIM) )  # Calculate onsets (cumulative sum of duration (2s) + ISI) simple_design$onset <- cumsum(c(0, simple_design$ISI[-NSTIM] + 2))  # Define the sampling frame (temporal structure of the scan) sframe_single_run <- sampling_frame(blocklens = 140, TR = TR)  head(simple_design) #>     stim ISI run trial onset #> 1   tool  12   1     1     0 #> 2 object  20   1     2    14 #> 3   tool  18   1     3    36 #> 4  scene  18   1     4    56 #> 5  scene  18   1     5    76 #> 6  scene  12   1     6    96 emodel_simple <- event_model(onset ~ hrf(stim),                               data = simple_design,                               block = ~ run,                               sampling_frame = sframe_single_run)  # Print the model summary print(emodel_simple)"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"visualizing-the-event-model","dir":"Articles","previous_headings":"","what":"Visualizing the Event Model","title":"Building Event Models","text":"can plot generated regressors using plot() (uses ggplot2) plotly() interactive version.  plot shows predicted BOLD timecourse condition (stim level) convolved default HRF.","code":"# Static plot (ggplot2) plot(emodel_simple) # Interactive plot via plotly plotly::ggplotly(plot(emodel_simple))"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"design-with-multiple-runs","dir":"Articles","previous_headings":"","what":"Design with Multiple Runs","title":"Building Event Models","text":"Let’s extend design two runs. event_model call remains , now block = ~ run correctly maps events respective runs based run column sampling_frame.","code":"# Construct a design table with two runs design_list <- lapply(1:2, function(run_idx) {   df <- data.frame(     stim = factor(sample(rep(cond, 4))),     ISI = sample(10:20, NSTIM, replace = TRUE),  # Increased ISI range for better spacing     run = rep(run_idx, NSTIM)   )   df$onset <- cumsum(c(0, df$ISI[-NSTIM] + 2))   df }) design_multi_run <- bind_rows(design_list)  # Sampling frame for two runs of 140s each sframe_multi_run <- sampling_frame(blocklens = c(140, 140), TR = TR)  head(design_multi_run) #>     stim ISI run onset #> 1   face  14   1     0 #> 2 object  17   1    16 #> 3  scene  11   1    35 #> 4   face  10   1    48 #> 5   tool  18   1    60 #> 6   face  20   1    80 emodel_multi_run <- event_model(onset ~ hrf(stim),                                  data = design_multi_run,                                  block = ~ run,                                  sampling_frame = sframe_multi_run)  print(emodel_multi_run) # Plot without faceting - the plot method will handle multiple blocks plot(emodel_multi_run)"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"two-factor-design","dir":"Articles","previous_headings":"","what":"Two-Factor Design","title":"Building Event Models","text":"Now consider design crossing stimulus type (stim) task instruction (task: attend vs. ignore). formula onset ~ hrf(stim, task) automatically creates regressors interaction stim task. term tag default stim_task.","code":"cond1 <- c(\"face\", \"scene\", \"tool\", \"object\") cond2 <- c(\"attend\", \"ignore\") comb <- expand.grid(stim = cond1, task = cond2) NSTIM_TF <- nrow(comb) * 4 # 8 conditions * 4 reps per run  # Design for two runs design_two_factor_list <- lapply(1:2, function(run_idx) {   ind <- sample(rep(1:nrow(comb), length.out = NSTIM_TF))   df <- data.frame(     stim = factor(comb$stim[ind]),     task = factor(comb$task[ind]),     ISI = sample(6:15, NSTIM_TF, replace = TRUE),  # Increased ISI range for better spacing     run = rep(run_idx, NSTIM_TF)   )   df$onset <- cumsum(c(0, df$ISI[-NSTIM_TF] + 2))   df }) design_two_factor <- bind_rows(design_two_factor_list)  # Sampling frame for two runs, potentially longer sframe_two_factor <- sampling_frame(blocklens = c(200, 200), TR = TR)  head(design_two_factor) #>     stim   task ISI run onset #> 1  scene attend   8   1     0 #> 2  scene attend  14   1    10 #> 3 object attend  12   1    26 #> 4  scene attend  11   1    40 #> 5   tool ignore  15   1    53 #> 6  scene ignore  14   1    70 emodel_two_factor <- event_model(onset ~ hrf(stim, task),                                   data = design_two_factor,                                   block = ~ run,                                   sampling_frame = sframe_two_factor) print(emodel_two_factor) # Column names will be like stim_task_stim.face_task.attend  # Plotting all interaction terms can be busy; consider plotly plot(emodel_two_factor) plotly::ggplotly(plot(emodel_two_factor))"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"amplitude-modulation-parametric-regressors","dir":"Articles","previous_headings":"","what":"Amplitude Modulation (Parametric Regressors)","title":"Building Event Models","text":"can model continuous variable (like reaction time, RT) modulates amplitude BOLD response. done including modulating variable within hrf() call. , hrf(stim) creates main effect term (tag: stim), hrf(RT_centered) creates parametric modulator term (tag: RT_centered).","code":"# Use the simple single-run design and add a simulated RT column simple_design$RT <- rnorm(nrow(simple_design), mean = 700, sd = 100)  # It's often recommended to center parametric modulators simple_design$RT_centered <- scale(simple_design$RT, center = TRUE, scale = FALSE)[,1] head(simple_design) #>     stim ISI run trial onset       RT RT_centered #> 1   tool  12   1     1     0 756.2990    34.12857 #> 2 object  20   1     2    14 662.7561   -59.41425 #> 3   tool  18   1     3    36 797.6973    75.52696 #> 4  scene  18   1     4    56 662.5419   -59.62846 #> 5  scene  18   1     5    76 805.2711    83.10077 #> 6  scene  12   1     6    96 595.0823  -127.08808 emodel_pmod <- event_model(onset ~ hrf(stim) + hrf(RT_centered),                             data = simple_design,                             block = ~ run,                             sampling_frame = sframe_single_run) print(emodel_pmod) # Column names: stim_stim.face, ..., stim_stim.object, RT_centered_RT_centered  # Plot the RT parametric modulator term (using its term tag) plot(emodel_pmod, term_name = \"RT_centered\") plotly::ggplotly(plot(emodel_pmod, term_name = \"RT_centered\"))"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"interaction-between-factors-and-amplitude-modulation","dir":"Articles","previous_headings":"","what":"Interaction Between Factors and Amplitude Modulation","title":"Building Event Models","text":"can also model parametric modulator interacts factor. example, RT modulate response differently faces vs. scenes? formula hrf(stim, RT_centered) creates separate RT modulators level stim. , hrf(stim) one term (tag: stim). interaction hrf(stim, RT_centered) second term (tag: stim_RT_centered).","code":"emodel_pmod_int <- event_model(onset ~ hrf(stim) + hrf(stim, RT_centered),                                 data = simple_design,                                 block = ~ run,                                 sampling_frame = sframe_single_run) print(emodel_pmod_int) # Columns: stim_stim.face, ..., stim_RT_centered_stim.face_RT_centered, ...  # Plot the interaction term (using its term tag) plot(emodel_pmod_int, term_name = \"stim_RT_centered\") plotly::ggplotly(plot(emodel_pmod_int, term_name = \"stim_RT_centered\"))"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"specifying-different-hrfs","dir":"Articles","previous_headings":"","what":"Specifying Different HRFs","title":"Building Event Models","text":"default, hrf() uses SPM canonical HRF (HRF_SPMG1). can specify different HRF basis term using basis argument within hrf() call model formula. main ways specify basis: Name (String): Use recognized name common HRFs: \"spmg1\" (default), \"spmg2\", \"spmg3\" \"gaussian\", \"gamma\" \"bspline\" \"bs\" (use nbasis set number splines) \"tent\" (use nbasis set number tent functions) Using Pre-defined HRF Objects: Pass exported HRF object directly. Examples include HRF_SPMG1, HRF_GAUSSIAN, HRF_SPMG2, HRF_SPMG3, HRF_BSPLINE, HRF_DAGUERRE, HRF_DAGUERRE_BASIS. Using Custom Functions f(t): Provide function definition accepts time t first argument. Using gen_hrf() Results: Create customized HRF using gen_hrf(), hrf_blocked(), hrf_lagged(), etc., pass resulting HRF object. Discovering Available Options: can easily explore available HRF types using list_available_hrfs() function: details examples different HRF types, refer documentation hrf() HRF-related vignettes fmrihrf package. examples within event_model context:","code":"# List basic information about available HRFs list_available_hrfs() #>        name      type nbasis_default is_alias #> 1     spmg1    object              1    FALSE #> 2     spmg2    object              2    FALSE #> 3     spmg3    object              3    FALSE #> 4     gamma    object              1    FALSE #> 5  gaussian    object              1    FALSE #> 6   bspline generator              5    FALSE #> 7      tent generator              5    FALSE #> 8   fourier generator              5    FALSE #> 9  daguerre generator              3    FALSE #> 10      fir generator             12    FALSE #> 11      lwu generator       variable    FALSE #> 12      gam    object              1    FALSE #> 13       bs generator              5     TRUE  # Get detailed descriptions list_available_hrfs(details = TRUE) #>        name      type nbasis_default is_alias                description #> 1     spmg1    object              1    FALSE        spmg1 HRF (object)  #> 2     spmg2    object              2    FALSE        spmg2 HRF (object)  #> 3     spmg3    object              3    FALSE        spmg3 HRF (object)  #> 4     gamma    object              1    FALSE        gamma HRF (object)  #> 5  gaussian    object              1    FALSE     gaussian HRF (object)  #> 6   bspline generator              5    FALSE   bspline HRF (generator)  #> 7      tent generator              5    FALSE      tent HRF (generator)  #> 8   fourier generator              5    FALSE   fourier HRF (generator)  #> 9  daguerre generator              3    FALSE  daguerre HRF (generator)  #> 10      fir generator             12    FALSE       fir HRF (generator)  #> 11      lwu generator       variable    FALSE       lwu HRF (generator)  #> 12      gam    object              1    FALSE          gam HRF (object)  #> 13       bs generator              5     TRUE bs HRF (generator) (alias) # Example 1: Using basis name string \"gaussian\" # Term tags: \"stim\", \"RT_centered\" emodel_diff_hrf <- event_model(onset ~ hrf(stim, basis=\"spmg1\") + hrf(RT_centered, basis=\"gaussian\"),                                 data = simple_design,                                 block = ~ run,                                 sampling_frame = sframe_single_run) print(emodel_diff_hrf) plot(emodel_diff_hrf, term_name = \"RT_centered\") # Plot the Gaussian RT regressor # Example 2: Using a pre-defined HRF object (SPMG3) # Term tag: \"stim\" emodel_spmg3 <- event_model(onset ~ hrf(stim, basis=HRF_SPMG3),                              data = simple_design,                              block = ~ run,                              sampling_frame = sframe_single_run) print(emodel_spmg3) # Note nbasis=3 for the hrf # Columns: stim_stim.face_b01, stim_stim.face_b02, ... plot(emodel_spmg3, term_name = \"stim\") # Plotting shows the 3 basis functions for one condition plotly::ggplotly(plot(emodel_spmg3)) # Better for exploring many conditions # Example 3: Using a custom function (simple linear ramp) # Term tag: \"stim\" linear_ramp_hrf <- function(t) { ifelse(t > 0 & t < 10, t/10, 0) } emodel_custom_hrf <- event_model(onset ~ hrf(stim, basis=linear_ramp_hrf),                                   data = simple_design,                                   block = ~ run,                                   sampling_frame = sframe_single_run) print(emodel_custom_hrf) plot(emodel_custom_hrf, term_name = \"stim\") # Example 4: Using gen_hrf() to create a lagged Gaussian # Term tag: \"stim\" lagged_gauss <- gen_hrf(hrf_gaussian, lag = 2, name = \"Lagged Gaussian\") emodel_gen_hrf <- event_model(onset ~ hrf(stim, basis = lagged_gauss),                                data = simple_design,                                block = ~ run,                                sampling_frame = sframe_single_run) print(emodel_gen_hrf) plot(emodel_gen_hrf, term_name = \"stim\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"trialwise-models-for-beta-series-analysis","dir":"Articles","previous_headings":"","what":"Trialwise Models for Beta-Series Analysis","title":"Building Event Models","text":"model trial individually (e.g., beta-series correlation), use trialwise() formula. creates separate regressor every single event specified onset variable.","code":"emodel_trialwise <- event_model(onset ~ trialwise(),                                  data = simple_design,                                  block = ~ run,                                  sampling_frame = sframe_single_run) print(emodel_trialwise) # Term tag: \"trialwise\" # Columns: trialwise_trial.1, trialwise_trial.2, ...  # Plotting trialwise models can be very dense! # It generates one condition per trial. plot(emodel_trialwise) plotly::ggplotly(plot(emodel_trialwise)) # Use plotly to explore"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"covariates-non-convolved-regressors","dir":"Articles","previous_headings":"","what":"Covariates (Non-convolved Regressors)","title":"Building Event Models","text":"Sometimes want include scan--scan regressors convolved HRF (e.g., motion, physiology). Use covariate() within formula. covariate matrix must one row per scan (sum blocklens). Normally, one add motion regressors baseline_model use illustrative example. Note: covariate rows match number scans, construction error helpful message.","code":"# Create covariates aligned to the sampling frame n_scans <- sum(blocklens(sframe_single_run)) motion <- data.frame(mx = rnorm(n_scans), my = rnorm(n_scans))  # Build a model with both convolved events and non-convolved covariates emodel_cov <- event_model(onset ~ hrf(stim) + covariate(mx, my, data = motion, id = \"motion\"),                           data = simple_design,                           block = ~ run,                           sampling_frame = sframe_single_run) print(emodel_cov)  # Inspect columns; motion terms are added as-is head(colnames(design_matrix(emodel_cov))) #> [1] \"stim_stim.face\"   \"stim_stim.object\" \"stim_stim.scene\"  \"stim_stim.tool\"   #> [5] \"mx\"               \"my\""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"accessing-model-components","dir":"Articles","previous_headings":"","what":"Accessing Model Components","title":"Building Event Models","text":"event_model created, can extract components:","code":"# List the terms in the model (names are now term tags) terms_list <- terms(emodel_pmod_int) print(names(terms_list)) #> [1] \"stim\"             \"stim_RT_centered\" # Expected: \"stim\", \"stim_RT_centered\"  # Get all condition names (full column names) conds <- conditions(emodel_pmod_int) # Example: stim_stim.face, stim_stim.scene, ...,  #          stim_RT_centered_stim.face_RT_centered, ... cat(\"\\nFirst 6 column names:\", head(colnames(design_matrix(emodel_pmod_int)), 6), \"...\\n\") #>  #> First 6 column names: stim_stim.face stim_stim.object stim_stim.scene stim_stim.tool stim_RT_centered_stim.face_RT_centered stim_RT_centered_stim.object_RT_centered ...  # Extract the full design matrix dmat_events <- design_matrix(emodel_pmod_int) cat(\"\\nEvent design matrix dimensions:\", dim(dmat_events), \"\\n\") #>  #> Event design matrix dimensions: 140 8 head(dmat_events[, 1:6]) #> # A tibble: 6 × 6 #>   stim_stim.face stim_stim.object stim_stim.scene stim_stim.tool #>            <dbl>            <dbl>           <dbl>          <dbl> #> 1              0                0               0         0.0624 #> 2              0                0               0         1.14   #> 3              0                0               0         1.74   #> 4              0                0               0         1.20   #> 5              0                0               0         0.552  #> 6              0                0               0         0.192  #> # ℹ 2 more variables: stim_RT_centered_stim.face_RT_centered <dbl>, #> #   stim_RT_centered_stim.object_RT_centered <dbl>  # Contrast weights and F-contrasts can also be extracted (see contrasts vignette) contrast_weights(emodel_pmod_int) #> NULL Fcontrasts(emodel_pmod_int) #> $`stim#stim` #>                                          c1 c2 c3 #> stim_stim.face                            0  0  0 #> stim_stim.object                          0  0  0 #> stim_stim.scene                           0  0  0 #> stim_stim.tool                            0  0  0 #> stim_RT_centered_stim.face_RT_centered    0  0  0 #> stim_RT_centered_stim.object_RT_centered  0  0  0 #> stim_RT_centered_stim.scene_RT_centered   0  0  0 #> stim_RT_centered_stim.tool_RT_centered    0  0  0 #> attr(,\"term_indices\") #> [1] 1 2 3 4 #>  #> $`stim:RT_centered#stim` #>                                          c1 c2 c3 #> stim_stim.face                            0  0  0 #> stim_stim.object                          0  0  0 #> stim_stim.scene                           0  0  0 #> stim_stim.tool                            0  0  0 #> stim_RT_centered_stim.face_RT_centered    0  0  0 #> stim_RT_centered_stim.object_RT_centered  0  0  0 #> stim_RT_centered_stim.scene_RT_centered   0  0  0 #> stim_RT_centered_stim.tool_RT_centered    0  0  0 #> attr(,\"term_indices\") #> [1] 5 6 7 8"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"visualizing-the-design-matrix-and-correlations","dir":"Articles","previous_headings":"","what":"Visualizing the Design Matrix and Correlations","title":"Building Event Models","text":"Two functions help visualize structure event design matrix: design_map: Shows matrix values heatmap. correlation_map: Shows correlation regressors.   event_model represents task-related part fMRI model. practice, combine baseline_model (drift/intercepts/nuisance) form full design matrix; downstream GLM fitting happens analysis packages (e.g., fmrireg).","code":"# Heatmap of the design matrix for the 2-factor model design_map(emodel_two_factor, rotate_x_text = TRUE) +   labs(title = \"Design Matrix Heatmap (Two-Factor Model)\") # Correlation map for the same model correlation_map(emodel_two_factor, rotate_x_text = TRUE) +   labs(title = \"Regressor Correlation Map (Two-Factor Model)\") # The column names in the plots will now reflect the new naming scheme."},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"contrasts-quickstart","dir":"Articles","previous_headings":"","what":"Contrasts Quickstart","title":"Building Event Models","text":"can attach contrasts directly hrf() terms. two common patterns.","code":"# Pairwise contrast between two stimulus levels con_face_vs_scene <- pair_contrast(~ stim == \"face\", ~ stim == \"scene\", name = \"face_vs_scene\")  emodel_con <- event_model(onset ~ hrf(stim, contrasts = contrast_set(con_face_vs_scene)),                           data = simple_design,                           block = ~ run,                           sampling_frame = sframe_single_run)  # List available contrast specs and weights contr_specs <- contrasts(emodel_con) cw <- contrast_weights(emodel_con) names(cw) #> [1] \"stim.face_vs_scene\"  # One-way contrast (main effect over levels of a factor) con_main_stim <- oneway_contrast(~ stim, name = \"main_stim\") emodel_con2 <- event_model(onset ~ hrf(stim, contrasts = contrast_set(con_main_stim)),                            data = simple_design,                            block = ~ run,                            sampling_frame = sframe_single_run)  fcons <- Fcontrasts(emodel_con2) names(fcons) #> [1] \"stim#stim\""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_04_event_models.html","id":"combining-event-and-baseline-designs","dir":"Articles","previous_headings":"","what":"Combining Event and Baseline Designs","title":"Building Event Models","text":"build full design matrix, bind event regressors baseline regressors. Downstream GLM fitting occurs analysis packages (e.g., fmrireg), fmridesign provides consistent, inspectable design matrices can feed tools.","code":"# Baseline model for the same sampling frame bmodel <- baseline_model(basis = \"poly\", degree = 5, sframe = sframe_two_factor)  # Combine columns (order can matter downstream; keep consistent) DM_full <- dplyr::bind_cols(design_matrix(emodel_two_factor), design_matrix(bmodel)) dim(DM_full) #> [1] 400  20 colnames(DM_full)[1:8] #> [1] \"stim_task_stim.face_task.attend\"   \"stim_task_stim.scene_task.attend\"  #> [3] \"stim_task_stim.tool_task.attend\"   \"stim_task_stim.object_task.attend\" #> [5] \"stim_task_stim.face_task.ignore\"   \"stim_task_stim.scene_task.ignore\"  #> [7] \"stim_task_stim.tool_task.ignore\"   \"stim_task_stim.object_task.ignore\""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"introduction-to-contrasts","dir":"Articles","previous_headings":"","what":"Introduction to Contrasts","title":"Contrasts in fmridesign","text":"Contrasts specify linear combinations GLM parameters (β) test hypotheses conditions trends. fmridesign, define contrasts inside hrf() calls using helper functions, extract weights contrast_weights() (F-sets Fcontrasts()).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"types-of-contrasts","dir":"Articles","previous_headings":"","what":"Types of Contrasts","title":"Contrasts in fmridesign","text":"T-contrasts use single contrast vector directional questions (e.g., > B). F-contrasts use matrix test sets effects (e.g., difference among levels), returning omnibus statistics.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"defining-contrasts-in-event-models","dir":"Articles","previous_headings":"","what":"Defining Contrasts in Event Models","title":"Contrasts in fmridesign","text":"Contrasts can specified directly within event_model() formula using contrasts argument hrf() terms:","code":"# Create a simple two-condition experiment set.seed(123) sframe <- sampling_frame(blocklens = 200, TR = 2)  # Generate events onsets <- sort(runif(40, 0, 350)) conditions <- rep(c(\"left\", \"right\"), 20)  # Define contrasts within the model emodel_with_contrast <- event_model(   onset ~ hrf(hand, contrasts = pair_contrast(~ hand == \"left\", ~ hand == \"right\", name = \"left_vs_right\")),   data = data.frame(     onset = onsets,     hand = factor(conditions),     block = factor(rep(1, 40))   ),   block = ~ block,   sampling_frame = sframe )  # Extract contrast weights contrast_weights(emodel_with_contrast) #> $hand.left_vs_right #> contrast: left_vs_right  #>  A:  ~hand == \"left\"  #>  B:  ~hand == \"right\"  #>  term:  hand  #>  weights:   #>            left_vs_right #> hand.left              1 #> hand.right            -1 #>  conditions:  hand_hand.left hand_hand.right"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"quick-validation","dir":"Articles","previous_headings":"Defining Contrasts in Event Models","what":"Quick Validation","title":"Contrasts in fmridesign","text":"Validate attached contrasts model one call:","code":"validate_contrasts(emodel_with_contrast) #> Warning: F-contrast 'hand' for term 'hand' has unmatched row names: left, right #>                 name type estimable sum_to_zero orthogonal_to_intercept #> 1 hand.left_vs_right    t      TRUE        TRUE                    TRUE #> 2          hand#hand    t      TRUE        TRUE                    TRUE #>   full_rank nonzero_weights #> 1        NA               2 #> 2        NA               0"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"pairwise-contrasts","dir":"Articles","previous_headings":"Advanced Contrast Specifications","what":"Pairwise Contrasts","title":"Contrasts in fmridesign","text":"designs multiple levels, can specify pairwise comparisons:","code":"# Three-condition experiment set.seed(456) conditions_3 <- rep(c(\"easy\", \"medium\", \"hard\"), each = 15) onsets_3 <- sort(runif(45, 0, 350))  emodel_pairwise <- event_model(   onset ~ hrf(difficulty,               contrasts = pairwise_contrasts(c(\"easy\",\"medium\",\"hard\"), facname = \"difficulty\", name_prefix = \"pair\")),   data = data.frame(     onset = onsets_3,     difficulty = factor(conditions_3, levels = c(\"easy\", \"medium\", \"hard\")),     block = factor(rep(1, 45))   ),   block = ~ block,   sampling_frame = sframe )  # View all contrasts contrasts_list <- contrast_weights(emodel_pairwise) names(contrasts_list) #> [1] \"difficulty.pair_easy_medium\" \"difficulty.pair_easy_hard\"   #> [3] \"difficulty.pair_medium_hard\""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"polynomial-contrasts","dir":"Articles","previous_headings":"Advanced Contrast Specifications","what":"Polynomial Contrasts","title":"Contrasts in fmridesign","text":"Test linear, quadratic, higher-order trends across ordered conditions:","code":"# Parametric design with 4 levels set.seed(789) intensity_levels <- rep(1:4, each = 12) onsets_param <- sort(runif(48, 0, 350))  # Create polynomial contrasts using poly_contrast() emodel_polynomial <- event_model(   onset ~ hrf(intensity,                contrasts = list(                 linear = poly_contrast(~ intensity, name = \"linear\", degree = 1),                 quadratic = poly_contrast(~ intensity, name = \"quadratic\", degree = 2),                 cubic = poly_contrast(~ intensity, name = \"cubic\", degree = 3)               )),   data = data.frame(     onset = onsets_param,     intensity = factor(intensity_levels),     block = factor(rep(1, 48))   ),   block = ~ block,   sampling_frame = sframe )  # Extract polynomial contrast weights poly_contrasts <- contrast_weights(emodel_polynomial) lapply(poly_contrasts, function(x) round(x$weights, 3)) #> $intensity.linear #>             linear_1 #> intensity.1   -0.671 #> intensity.2   -0.224 #> intensity.3    0.224 #> intensity.4    0.671 #>  #> $intensity.quadratic #>             quadratic_1 quadratic_2 #> intensity.1      -0.671         0.5 #> intensity.2      -0.224        -0.5 #> intensity.3       0.224        -0.5 #> intensity.4       0.671         0.5 #>  #> $intensity.cubic #>             cubic_1 cubic_2 cubic_3 #> intensity.1  -0.671     0.5  -0.224 #> intensity.2  -0.224    -0.5   0.671 #> intensity.3   0.224    -0.5  -0.671 #> intensity.4   0.671     0.5   0.224"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"main-effects-and-interactions","dir":"Articles","previous_headings":"Factorial Design Contrasts","what":"Main Effects and Interactions","title":"Contrasts in fmridesign","text":"factorial designs, specify contrasts main effects interactions:","code":"# 2x2 factorial design set.seed(234) n_trials <- 60 factor_A <- rep(c(\"A1\", \"A2\"), each = 30) factor_B <- rep(rep(c(\"B1\", \"B2\"), each = 15), 2) factorial_onsets <- sort(runif(n_trials, 0, 350))  emodel_factorial <- event_model(   onset ~ hrf(A, B, contrasts = contrast_set(     oneway_contrast(~ A, name = \"main_A\"),     oneway_contrast(~ B, name = \"main_B\"),     interaction_contrast(~ A * B, name = \"A_by_B\")   )),   data = data.frame(     onset = factorial_onsets,     A = factor(factor_A),     B = factor(factor_B),     block = factor(rep(1, n_trials))   ),   block = ~ block,   sampling_frame = sframe )  interaction_contrasts <- contrast_weights(emodel_factorial) #> Warning: Contrast 'main_A' for term 'A_B' has unmatched row names: A1_B1, #> A2_B1, A1_B2, A2_B2 #> Warning: Contrast 'main_B' for term 'A_B' has unmatched row names: A1_B1, #> A2_B1, A1_B2, A2_B2 #> Warning: Contrast 'A_by_B' for term 'A_B' has unmatched row names: A1_B1, #> A2_B1, A1_B2, A2_B2 lapply(interaction_contrasts, function(x) round(x$weights, 3)) #> $`A:B.main_A` #>       main_A_1 #> A1_B1       -1 #> A2_B1        1 #> A1_B2       -1 #> A2_B2        1 #>  #> $`A:B.main_B` #>       main_B_1 #> A1_B1       -1 #> A2_B1       -1 #> A1_B2        1 #> A2_B2        1 #>  #> $`A:B.A_by_B` #>       A_by_B_1 #> A1_B1        1 #> A2_B1       -1 #> A1_B2       -1 #> A2_B2        1"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"contrasts-with-parametric-modulators","dir":"Articles","previous_headings":"","what":"Contrasts with Parametric Modulators","title":"Contrasts in fmridesign","text":"using parametric modulators, contrasts can test categorical continuous effects:","code":"# Design with conditions and RT modulation set.seed(567) n_events <- 50 pm_conditions <- rep(c(\"congruent\", \"incongruent\"), each = 25) pm_onsets <- sort(runif(n_events, 0, 350)) pm_RT <- rnorm(n_events, mean = ifelse(pm_conditions == \"congruent\", 0.5, 0.7), sd = 0.1)  emodel_parametric <- event_model(   onset ~ hrf(condition,                contrasts = pair_contrast(~ condition == \"incongruent\", ~ condition == \"congruent\", name = \"incongruent_gt_congruent\")) +            hrf(RT),   data = data.frame(     onset = pm_onsets,     condition = factor(pm_conditions),     RT = scale(pm_RT)[,1],     block = factor(rep(1, n_events))   ),   block = ~ block,   sampling_frame = sframe )  # Get contrasts - includes both categorical and parametric terms param_contrasts <- contrast_weights(emodel_parametric) print(param_contrasts) #> $condition.incongruent_gt_congruent #> contrast: incongruent_gt_congruent  #>  A:  ~condition == \"incongruent\"  #>  B:  ~condition == \"congruent\"  #>  term:  condition  #>  weights:   #>                       incongruent_gt_congruent #> condition.congruent                         -1 #> condition.incongruent                        1 #>  conditions:  condition_condition.congruent condition_condition.incongruent RT_RT"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"f-contrasts-for-omnibus-tests","dir":"Articles","previous_headings":"","what":"F-contrasts for Omnibus Tests","title":"Contrasts in fmridesign","text":"F-contrasts test multiple parameters simultaneously:","code":"# Four-condition design for omnibus test set.seed(890) conditions_4 <- rep(c(\"A\", \"B\", \"C\", \"D\"), each = 12) onsets_4 <- sort(runif(48, 0, 350))  # Using oneway_contrast for main effect emodel_omnibus <- event_model(   onset ~ hrf(condition,                contrasts = oneway_contrast(~ condition, name = \"main_effect\")),   data = data.frame(     onset = onsets_4,     condition = factor(conditions_4),     block = factor(rep(1, 48))   ),   block = ~ block,   sampling_frame = sframe )  # Extract F-contrast f_contrasts <- Fcontrasts(emodel_omnibus) #> Warning: F-contrast 'condition' for term 'condition' has unmatched row names: #> A, B, C, D print(f_contrasts) #> $`condition#condition` #>                       c1 c2 c3 #> condition_condition.A  0  0  0 #> condition_condition.B  0  0  0 #> condition_condition.C  0  0  0 #> condition_condition.D  0  0  0 #> attr(,\"term_indices\") #> [1] 1 2 3 4"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"extracting-and-manipulating-weights","dir":"Articles","previous_headings":"Working with Contrast Weights","what":"Extracting and Manipulating Weights","title":"Contrasts in fmridesign","text":"","code":"# Create a model simple_model <- event_model(   onset ~ hrf(stim),   data = data.frame(     onset = c(10, 30, 50, 70, 90),     stim = factor(c(\"A\", \"B\", \"A\", \"B\", \"A\")),     block = factor(rep(1, 5))   ),   block = ~ block,   sampling_frame = sampling_frame(60, TR = 2) )  # Manually create contrast weights design_mat <- design_matrix(simple_model) n_cols <- ncol(design_mat)  # Create a custom contrast vector custom_contrast <- rep(0, n_cols) # Find columns for condition A and B col_names <- colnames(design_mat) a_cols <- grep(\"stim_A\", col_names) b_cols <- grep(\"stim_B\", col_names)  # A > B contrast custom_contrast[a_cols] <- 1/length(a_cols) custom_contrast[b_cols] <- -1/length(b_cols)  print(custom_contrast) #> [1] 0 0"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"contrast-validation","dir":"Articles","previous_headings":"Working with Contrast Weights","what":"Contrast Validation","title":"Contrasts in fmridesign","text":"Validate contrasts model (design matrix) constructed. can validate built-contrast specs custom vectors using validate_contrasts():","code":"# Validate the custom contrast against the design implied by the model validate_contrasts(simple_model, weights = custom_contrast) #>       name type estimable sum_to_zero orthogonal_to_intercept full_rank #> 1 contrast    t      TRUE        TRUE                    TRUE        NA #>   nonzero_weights #> 1               0"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"contrasts-for-multi-run-designs","dir":"Articles","previous_headings":"","what":"Contrasts for Multi-Run Designs","title":"Contrasts in fmridesign","text":"working multiple runs, contrasts can specified test within-run across-run effects:","code":"# Two-run experiment with potential run differences set.seed(345) run1_onsets <- sort(runif(20, 0, 200)) run2_onsets <- sort(runif(20, 0, 200)) all_onsets <- c(run1_onsets, run2_onsets) all_conditions <- rep(c(\"stim\", \"control\"), 20) all_blocks <- rep(1:2, each = 20)  emodel_multirun <- event_model(   onset ~ hrf(condition, block,               contrasts = list(                 overall   = pair_contrast(~ condition == \"stim\", ~ condition == \"control\", name = \"overall\"),                 run1_only = pair_contrast(~ condition == \"stim\", ~ condition == \"control\", name = \"run1\", where = ~ block == \"1\"),                 run2_only = pair_contrast(~ condition == \"stim\", ~ condition == \"control\", name = \"run2\", where = ~ block == \"2\")               )),   data = data.frame(     onset = all_onsets,     condition = factor(all_conditions),     block = factor(all_blocks)   ),   block = ~ block,   sampling_frame = sampling_frame(c(120, 120), TR = 2) )  multirun_contrasts <- contrast_weights(emodel_multirun) #> Warning: Contrast 'overall' for term 'condition_block' has unmatched row names: #> condition.control_block.1, condition.stim_block.1, condition.control_block.2, #> condition.stim_block.2 #> Warning: Contrast 'run1' for term 'condition_block' has unmatched row names: #> condition.control_block.1, condition.stim_block.1, condition.control_block.2, #> condition.stim_block.2 #> Warning: Contrast 'run2' for term 'condition_block' has unmatched row names: #> condition.control_block.1, condition.stim_block.1, condition.control_block.2, #> condition.stim_block.2 names(multirun_contrasts) #> [1] \"condition:block.overall\" \"condition:block.run1\"    #> [3] \"condition:block.run2\""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"contrast-specification-best-practices","dir":"Articles","previous_headings":"","what":"Contrast Specification Best Practices","title":"Contrasts in fmridesign","text":"Plan contrasts priori, keep simple interpretable, prefer orthogonal sets possible.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"scaling-and-normalization","dir":"Articles","previous_headings":"Contrast Specification Best Practices","what":"2. Scaling and Normalization","title":"Contrasts in fmridesign","text":"","code":"# Properly scaled contrasts sum to zero create_scaled_contrast <- function(n_positive, n_negative) {   c(rep(1/n_positive, n_positive), rep(-1/n_negative, n_negative)) }  # Example: 3 vs 2 conditions scaled_contrast <- create_scaled_contrast(3, 2) print(scaled_contrast) #> [1]  0.3333333  0.3333333  0.3333333 -0.5000000 -0.5000000 print(sum(scaled_contrast))  # Should be ~0 #> [1] -5.551115e-17"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"multiple-comparison-correction","dir":"Articles","previous_headings":"Contrast Specification Best Practices","what":"3. Multiple Comparison Correction","title":"Contrasts in fmridesign","text":"testing multiple contrasts, consider correction multiple comparisons:","code":"# Design with multiple planned contrasts emodel_multiple <- event_model(   onset ~ hrf(condition,               contrasts = contrast_set(                 pair_contrast(~ condition == \"C1\", ~ condition == \"C2\", name = \"C1_vs_C2\"),                 pair_contrast(~ condition == \"C1\", ~ condition == \"C3\", name = \"C1_vs_C3\"),                 pair_contrast(~ condition == \"C2\", ~ condition == \"C3\", name = \"C2_vs_C3\")               )),   data = data.frame(     onset = sort(runif(60, 0, 350)),     condition = factor(rep(c(\"C1\", \"C2\", \"C3\"), 20)),     block = factor(rep(1, 60))   ),   block = ~ block,   sampling_frame = sframe )  # Number of contrasts to correct for n_contrasts <- length(contrast_weights(emodel_multiple)) bonferroni_alpha <- 0.05 / n_contrasts print(paste(\"Bonferroni-corrected alpha:\", bonferroni_alpha)) #> [1] \"Bonferroni-corrected alpha: 0.0166666666666667\""},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"integration-with-statistical-analysis","dir":"Articles","previous_headings":"","what":"Integration with Statistical Analysis","title":"Contrasts in fmridesign","text":"contrasts defined, can used statistical analysis:","code":"# Assuming you have: # - Y: fMRI time series data # - X: design matrix from event_model # - C: contrast vector  # Standard GLM analysis # fit <- lm(Y ~ X - 1) # beta <- coef(fit) # contrast_estimate <- t(C) %*% beta # contrast_se <- sqrt(t(C) %*% vcov(fit) %*% C) # t_stat <- contrast_estimate / contrast_se  # Using the fmridesign contrast design_mat <- design_matrix(emodel_with_contrast) contrasts <- contrast_weights(emodel_with_contrast)  # Apply contrast to parameter estimates # contrast_result <- apply_contrast(fit, contrasts[[1]])"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"custom-contrast-functions","dir":"Articles","previous_headings":"Advanced Topics","what":"Custom Contrast Functions","title":"Contrasts in fmridesign","text":"can generate complex patterns via helper generators return contrast specifications. example, sliding-window set compares adjacent, disjoint windows across ordered factor: targeted patterns (e.g., specific basis functions continuous terms), use column_contrast() regex match design-matrix columns.","code":"# Five ordered levels lvl <- paste0(\"L\", 1:5)  # Build a small model with an ordered factor set.seed(111) emod_sliding <- event_model(   onset ~ hrf(level, contrasts = sliding_window_contrasts(levels = lvl, facname = \"level\", window_size = 1)),   data = data.frame(     onset = sort(runif(50, 0, 350)),     level = factor(sample(lvl, 50, replace = TRUE), levels = lvl, ordered = TRUE),     block = factor(rep(1, 50))   ),   block = ~ block,   sampling_frame = sframe )  # Inspect the generated contrasts names(contrast_weights(emod_sliding)) #> [1] \"level.win_L1_vs_L2\" \"level.win_L2_vs_L3\" \"level.win_L3_vs_L4\" #> [4] \"level.win_L4_vs_L5\""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"rank-deficient-contrasts","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"1. Rank-Deficient Contrasts","title":"Contrasts in fmridesign","text":"","code":"# This will cause issues - contrast is not estimable bad_data <- data.frame(   onset = c(10, 30),   condition = factor(c(\"A\", \"A\")),  # Only one level!   block = factor(c(1, 1)) )  # This will warn about the issue tryCatch({   bad_model <- event_model(     onset ~ hrf(condition, contrasts = pair_contrast(~ condition == \"A\", ~ condition == \"B\", name = \"A_vs_B\")),     data = bad_data,     block = ~ block,     sampling_frame = sampling_frame(50, TR = 2)   ) }, error = function(e) {   print(\"Error: Cannot create contrast for single-level factor\") })"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"multicollinearity-in-contrasts","dir":"Articles","previous_headings":"Troubleshooting Common Issues","what":"2. Multicollinearity in Contrasts","title":"Contrasts in fmridesign","text":"","code":"# Check for multicollinearity in your design matrix cc <- check_collinearity(design_matrix(emodel_with_contrast), threshold = 0.9) if (!cc$ok) cc$pairs"},{"path":"https://bbuchsbaum.github.io/fmridesign/articles/a_05_contrasts.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Contrasts in fmridesign","text":"Define contrasts inline, extract weights cleanly, validate analysis. Use t-contrasts directional tests F-contrasts omnibus effects. 3. Complex designs: Handle factorial, parametric, multi-run contrasts 4. Validation tools: Ensure contrasts properly specified estimable Remember : - Plan contrasts based hypotheses - Validate contrast properties analysis - Consider multiple comparison corrections - Document contrast specifications reproducibility information event baseline models, see: - vignette(\"a_01_introduction\") - vignette(\"a_03_baseline_model\") - vignette(\"a_04_event_models\")","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bradley Buchsbaum. Author, maintainer.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buchsbaum B (2025). fmridesign: Design Matrix Construction fMRI Analysis. R package version 0.1.0, https://github.com/bbuchsbaum/fmridesign.","code":"@Manual{,   title = {fmridesign: Design Matrix Construction for fMRI Analysis},   author = {Bradley Buchsbaum},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/bbuchsbaum/fmridesign}, }"},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"fmridesign","dir":"","previous_headings":"","what":"Design Matrix Construction for fMRI Analysis","title":"Design Matrix Construction for fMRI Analysis","text":"Design Matrix Construction fMRI Analysis","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Design Matrix Construction for fMRI Analysis","text":"fmridesign provides tools constructing design matrices functional magnetic resonance imaging (fMRI) analyses. includes facilities creating event models flexible hemodynamic response functions (HRFs), baseline models nuisance regression, utilities handling experimental designs. package focuses design aspect fMRI analysis intended used analysis packages like fmrireg.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design Matrix Construction for fMRI Analysis","text":"","code":"# Install development version from GitHub # install.packages(\"devtools\") devtools::install_github(\"bbuchsbaum/fmridesign\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Design Matrix Construction for fMRI Analysis","text":"Event Models: Create experimental design matrices flexible HRF specifications Baseline Models: Build nuisance regressors drift, motion, confounds Flexible HRFs: Support various hemodynamic response functions via fmrihrf package Block Designs: Handle multi-run/session fMRI experiments","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Design Matrix Construction for fMRI Analysis","text":"","code":"library(fmridesign)  # Create event data event_data <- data.frame(   condition = factor(c(\"A\", \"B\", \"A\", \"B\")),   onsets = c(1, 10, 20, 80),   run = c(1, 1, 1, 1) )  # Define sampling frame sframe <- sampling_frame(blocklens = 100, TR = 2)  # Create event model ev_model <- event_model(   onsets ~ hrf(condition),   data = event_data,   block = ~run,   sampling_frame = sframe )  # Create baseline model base_model <- baseline_model(   basis = \"bs\",   degree = 3,   sframe = sframe )  # Extract design matrices event_dm <- design_matrix(ev_model) baseline_dm <- design_matrix(base_model)"},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related Packages","title":"Design Matrix Construction for fMRI Analysis","text":"fmrireg: Analysis fitting fMRI models fmrihrf: Hemodynamic response functions fmridataset: fMRI dataset structures","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"documentation--vignettes","dir":"","previous_headings":"","what":"Documentation & Vignettes","title":"Design Matrix Construction for fMRI Analysis","text":"Online site (pkgdown): https://bbuchsbaum.github.io/fmridesign/ Articles index: https://bbuchsbaum.github.io/fmridesign/articles/ R, can also open installed vignettes:","code":"vignette(\"a_01_introduction\", package = \"fmridesign\") vignette(\"a_03_baseline_model\", package = \"fmridesign\") vignette(\"a_04_event_models\", package = \"fmridesign\") vignette(\"a_05_contrasts\", package = \"fmridesign\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Design Matrix Construction for fMRI Analysis","text":"GPL (>= 2)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/BSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"B-spline basis — BSpline","title":"B-spline basis — BSpline","text":"Generate B-spline basis matrix polynomial spline.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/BSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"B-spline basis — BSpline","text":"","code":"BSpline(x, degree)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/BSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"B-spline basis — BSpline","text":"x numeric vector evaluate spline. Missing values allowed x degree degree piecewise polynomial","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/BSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"B-spline basis — BSpline","text":"BSpline list instance","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Fcontrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute F-contrasts — Fcontrasts","title":"Compute F-contrasts — Fcontrasts","text":"Compute F-contrasts","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Fcontrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute F-contrasts — Fcontrasts","text":"","code":"Fcontrasts(x, ...)  # S3 method for class 'convolved_term' Fcontrasts(x, ...)  # S3 method for class 'event_model' Fcontrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Fcontrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute F-contrasts — Fcontrasts","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Fcontrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute F-contrasts — Fcontrasts","text":"named list matrices F-contrast weights.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Fcontrasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute F-contrasts — Fcontrasts","text":"Row names contrast matrices can specify levels term tested.  matching done design matrix column names.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Ident.html","id":null,"dir":"Reference","previous_headings":"","what":"Ident — Ident","title":"Ident — Ident","text":"basis applies identity transform set raw variables.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Ident.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ident — Ident","text":"","code":"Ident(...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Ident.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ident — Ident","text":"... list variable names","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Ident.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ident — Ident","text":"instance class Ident extending ParametricBasis","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial basis — Poly","title":"Polynomial basis — Poly","text":"Orthogonal polynomial expansion linear term based poly","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial basis — Poly","text":"","code":"Poly(x, degree)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial basis — Poly","text":"x numeric vector evaluate polynomial. Missing values allowed x. degree degree polynomial. Must less number unique points.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial basis — Poly","text":"instance class Poly extending ParametricBasis","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/RobustScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Scaling (Median/MAD) — RobustScale","title":"Robust Scaling (Median/MAD) — RobustScale","text":"Robust Scaling (Median/MAD)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/RobustScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Scaling (Median/MAD) — RobustScale","text":"","code":"RobustScale(x)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/RobustScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Scaling (Median/MAD) — RobustScale","text":"x numeric vector (NAs allowed)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/RobustScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Scaling (Median/MAD) — RobustScale","text":"object class c(\"RobustScale\",\"ParametricBasis\")","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-score (global) basis — Scale","title":"Z-score (global) basis — Scale","text":"Z-score (global) basis","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-score (global) basis — Scale","text":"","code":"Scale(x)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-score (global) basis — Scale","text":"x numeric vector (NAs allowed)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-score (global) basis — Scale","text":"object class c(\"Scale\",\"ParametricBasis\")","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/ScaleWithin.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-score within groups — ScaleWithin","title":"Z-score within groups — ScaleWithin","text":"Z-score within groups","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/ScaleWithin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-score within groups — ScaleWithin","text":"","code":"ScaleWithin(x, g)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/ScaleWithin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-score within groups — ScaleWithin","text":"x numeric vector g grouping factor / character / integer length x","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/ScaleWithin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-score within groups — ScaleWithin","text":"object class ScaleWithin (ParametricBasis).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Standardized.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized basis — Standardized","title":"Standardized basis — Standardized","text":"Standardize numeric vector centering scaling, handling NAs appropriately. computed standard deviation NA zero, small constant (1e-6) used instead avoid division zero. returned basis matrix one column standardized name.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Standardized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized basis — Standardized","text":"","code":"Standardized(x)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Standardized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized basis — Standardized","text":"x numeric vector standardize. Missing values allowed replaced 0 standardization.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/Standardized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized basis — Standardized","text":"instance class Standardized extending ParametricBasis","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Baseline Specification — baseline","title":"Create a Baseline Specification — baseline","text":"Generates baselinespec modeling low-frequency drift fMRI time series.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Baseline Specification — baseline","text":"","code":"baseline(   degree = 1,   basis = c(\"constant\", \"poly\", \"bs\", \"ns\"),   name = NULL,   intercept = c(\"runwise\", \"global\", \"none\") )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Baseline Specification — baseline","text":"degree Number basis terms per image block (ignored \"constant\"). basis Type basis (\"constant\", \"poly\", \"bs\", \"ns\"). name Optional name term. intercept Type intercept include (\"runwise\", \"global\", \"none\").","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Baseline Specification — baseline","text":"baselinespec list instance.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Baseline Specification — baseline","text":"","code":"baseline(degree = 3, basis = \"bs\") #> $degree #> [1] 3 #>  #> $basis #> [1] \"bs\" #>  #> $fun #> function (x, df = NULL, knots = NULL, degree = 3, intercept = FALSE,  #>     Boundary.knots = range(x), warn.outside = TRUE)  #> { #>     ord <- 1L + (degree <- as.integer(degree)) #>     if (ord <= 1)  #>         stop(\"'degree' must be integer >= 1\") #>     nx <- names(x) #>     x <- as.vector(x) #>     nax <- is.na(x) #>     if (nas <- any(nax))  #>         x <- x[!nax] #>     outside <- if (!missing(Boundary.knots)) { #>         Boundary.knots <- sort(Boundary.knots) #>         (ol <- x < Boundary.knots[1L]) | (or <- x > Boundary.knots[2L]) #>     } #>     else FALSE #>     if (mk.knots <- !is.null(df) && is.null(knots)) { #>         nIknots <- df - ord + (1L - intercept) #>         if (nIknots < 0L) { #>             nIknots <- 0L #>             warning(gettextf(\"'df' was too small; have used %d\",  #>                 ord - (1L - intercept)), domain = NA) #>         } #>         knots <- if (nIknots > 0L) { #>             knots <- seq.int(from = 0, to = 1, length.out = nIknots +  #>                 2L)[-c(1L, nIknots + 2L)] #>             quantile(x[!outside], knots, names = FALSE) #>         } #>     } #>     else if (!all(is.finite(knots)))  #>         stop(\"non-finite knots\") #>     if (mk.knots && length(knots) && any(lrEq <- range(knots) %in%  #>         Boundary.knots)) { #>         if (lrEq[1L]) { #>             aE <- all(i <- knots == (piv <- Boundary.knots[1L])) #>             if (aE)  #>                 warning(\"all interior knots match left boundary knot\") #>             else knots[i] <- knots[i] + (min(knots[knots > piv]) -  #>                 piv)/8 #>         } #>         if (lrEq[2L]) { #>             aE2 <- all(i <- knots == (piv <- Boundary.knots[2L])) #>             if (aE2)  #>                 warning(\"all interior knots match right boundary knot\") #>             else knots[i] <- knots[i] - (piv - max(knots[knots <  #>                 piv]))/8 #>         } #>         if (!(lrEq[1L] && aE || lrEq[2L] && aE2))  #>             warning(\"shoving 'interior' knots matching boundary knots to inside\") #>     } #>     Aknots <- sort(c(rep(Boundary.knots, ord), knots)) #>     if (any(outside)) { #>         if (warn.outside)  #>             warning(\"some 'x' values beyond boundary knots may cause ill-conditioned bases\") #>         derivs <- 0:degree #>         scalef <- gamma(1L:ord) #>         basis <- array(0, c(length(x), length(Aknots) - degree -  #>             1L)) #>         e <- 1/4 #>         if (any(ol)) { #>             k.pivot <- (1 - e) * Boundary.knots[1L] + e * Aknots[ord +  #>                 1] #>             xl <- cbind(1, outer(x[ol] - k.pivot, 1L:degree,  #>                 `^`)) #>             tt <- splineDesign(Aknots, rep(k.pivot, ord), ord,  #>                 derivs) #>             basis[ol, ] <- xl %*% (tt/scalef) #>         } #>         if (any(or)) { #>             k.pivot <- (1 - e) * Boundary.knots[2L] + e * Aknots[length(Aknots) -  #>                 ord] #>             xr <- cbind(1, outer(x[or] - k.pivot, 1L:degree,  #>                 `^`)) #>             tt <- splineDesign(Aknots, rep(k.pivot, ord), ord,  #>                 derivs) #>             basis[or, ] <- xr %*% (tt/scalef) #>         } #>         if (any(inside <- !outside))  #>             basis[inside, ] <- splineDesign(Aknots, x[inside],  #>                 ord) #>     } #>     else basis <- splineDesign(Aknots, x, ord) #>     if (!intercept)  #>         basis <- basis[, -1L, drop = FALSE] #>     n.col <- ncol(basis) #>     if (nas) { #>         nmat <- matrix(NA, length(nax), n.col) #>         nmat[!nax, ] <- basis #>         basis <- nmat #>     } #>     dimnames(basis) <- list(nx, 1L:n.col) #>     a <- list(degree = degree, knots = if (is.null(knots)) numeric(0L) else knots,  #>         Boundary.knots = Boundary.knots, intercept = intercept) #>     attributes(basis) <- c(attributes(basis), a) #>     class(basis) <- c(\"bs\", \"basis\", \"matrix\") #>     basis #> } #> <bytecode: 0x55bdd992f028> #> <environment: namespace:splines> #>  #> $intercept #> [1] \"runwise\" #>  #> $name #> [1] \"baseline_bs_3\" #>  #> attr(,\"class\") #> [1] \"baselinespec\" \"nuisancespec\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Baseline Model — baseline_model","title":"Construct a Baseline Model — baseline_model","text":"Builds baseline model account noise non-event-related variance. model may include drift term, block intercept term, nuisance regressors.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Baseline Model — baseline_model","text":"","code":"baseline_model(   basis = c(\"constant\", \"poly\", \"bs\", \"ns\"),   degree = 1,   sframe,   intercept = c(\"runwise\", \"global\", \"none\"),   nuisance_list = NULL )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Baseline Model — baseline_model","text":"basis Character; type basis function (\"constant\", \"poly\", \"bs\", \"ns\"). degree Integer; degree spline/polynomial function. sframe sampling_frame object. intercept Character; whether include intercept (\"runwise\", \"global\", \"none\"). Ignored basis == \"constant\" drift term already provides constant baseline. nuisance_list Optional list nuisance matrices data frames (one per fMRI block).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Baseline Model — baseline_model","text":"object class \"baseline_model\".","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Baseline Model — baseline_model","text":"","code":"sframe <- fmrihrf::sampling_frame(blocklens = c(100, 100), TR = 2) bmod <- baseline_model(basis = \"bs\", degree = 3, sframe = sframe) bmod_global <- baseline_model(basis = \"bs\", degree = 3, sframe = sframe, intercept = \"global\") bmod_nointercept <- baseline_model(basis = \"bs\", degree = 3, sframe = sframe, intercept = \"none\") stopifnot(ncol(design_matrix(bmod)) == 8)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract baseline terms — baseline_terms","title":"Extract baseline terms — baseline_terms","text":"Extract baseline terms","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract baseline terms — baseline_terms","text":"","code":"baseline_terms(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract baseline terms — baseline_terms","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/baseline_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract baseline terms — baseline_terms","text":"named list baseline term objects.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/basis_suffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Basis Function Suffix — basis_suffix","title":"Create Basis Function Suffix — basis_suffix","text":"Generates _b## suffix HRF basis functions.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/basis_suffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Basis Function Suffix — basis_suffix","text":"","code":"basis_suffix(j, nb)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/basis_suffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Basis Function Suffix — basis_suffix","text":"j Integer vector basis indices (1-based). nb Total number basis functions.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/basis_suffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Basis Function Suffix — basis_suffix","text":"Character vector suffixes (e.g., _b01, _b02).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/basis_suffix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Basis Function Suffix — basis_suffix","text":"","code":"basis_suffix(1:3, 5) #> [1] \"_b01\" \"_b02\" \"_b03\" basis_suffix(1:10, 10) #>  [1] \"_b01\" \"_b02\" \"_b03\" \"_b04\" \"_b05\" \"_b06\" \"_b07\" \"_b08\" \"_b09\" \"_b10\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/block.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Block Variable — block","title":"Create a Block Variable — block","text":"Returns block variable constant span scanning run.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Block Variable — block","text":"","code":"block(x)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Block Variable — block","text":"x block variable.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Block Variable — block","text":"object class \"blockspec\".","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Block Variable — block","text":"","code":"block(run) #> $name #> run #>  #> $label #> [1] \"block(run)\" #>  #> attr(,\"class\") #> [1] \"blockspec\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract cells from a design object — cells.baseline_model","title":"Extract cells from a design object — cells.baseline_model","text":"Extract cells design object","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract cells from a design object — cells.baseline_model","text":"","code":"# S3 method for class 'baseline_model' cells(x, drop.empty = TRUE, ...)  cells(x, drop.empty = TRUE, ...)  # S3 method for class 'event' cells(x, drop.empty = TRUE, ...)  # S3 method for class 'event_term' cells(x, drop.empty = TRUE, ...)  # S3 method for class 'covariate_convolved_term' cells(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract cells from a design object — cells.baseline_model","text":"x object extract cells . drop.empty Logical indicating whether drop empty cells (default: TRUE). ... Additional arguments (e.g., exclude_basis convolved_term method).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract cells from a design object — cells.baseline_model","text":"data.frame/tibble cells (categorical combinations) relevant x.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/check_collinearity.html","id":null,"dir":"Reference","previous_headings":"","what":"Check design matrix for multicollinearity — check_collinearity","title":"Check design matrix for multicollinearity — check_collinearity","text":"Convenience helper quickly flag highly correlated regressors.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/check_collinearity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check design matrix for multicollinearity — check_collinearity","text":"","code":"check_collinearity(X, threshold = 0.9)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/check_collinearity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check design matrix for multicollinearity — check_collinearity","text":"X numeric design matrix (event_model). threshold Absolute correlation pair flagged. Default 0.9.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/check_collinearity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check design matrix for multicollinearity — check_collinearity","text":"list elements: ok (logical), pairs (data.frame offending pairs correlations). Invisibly returns list.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/check_collinearity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check design matrix for multicollinearity — check_collinearity","text":"","code":"if (FALSE) { # \\dontrun{ res <- check_collinearity(design_matrix(emodel), threshold = 0.95) if (!res$ok) print(res$pairs) } # }"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/column_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Contrast Specification — column_contrast","title":"Column Contrast Specification — column_contrast","text":"Define contrast directly targeting design matrix columns using regex patterns. useful contrasts involving continuous variables specific basis functions.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/column_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Contrast Specification — column_contrast","text":"","code":"column_contrast(pattern_A, pattern_B = NULL, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/column_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Contrast Specification — column_contrast","text":"pattern_A character string containing regex pattern identify columns positive (+) part contrast. pattern_B Optional character string containing regex pattern negative (-) part (-B type contrasts). NULL, creates contrast testing average columns matching pattern_A baseline (0). name character string name contrast (mandatory). Currently unused column_contrast, kept API consistency.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/column_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column Contrast Specification — column_contrast","text":"column_contrast_spec object containing specification.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/column_contrast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Column Contrast Specification — column_contrast","text":"contrast type operates finding design matrix columns whose names match provided patterns (pattern_A, pattern_B). calculates weights average effect '' columns compared average effect 'B' columns (baseline pattern_B NULL). Weights assigned +1/nA '' columns -1/nB 'B' columns, ensuring contrast sums zero B groups present. Use standard R regex syntax patterns. Remember escape special characters (e.g., \\\\[, \\\\., \\\\*).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/column_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column Contrast Specification — column_contrast","text":"","code":"# Test the main effect of a continuous modulator 'RT' # Assumes RT is a column name, e.g., from columns(Scale(RT)) cc1 <- column_contrast(pattern_A = \"^z_RT$\", name = \"Main_RT\")  # Compare Condition.A vs Condition.B for the 'RT' modulator effect # Assumes condition names like \"Condition.A_z_RT\", \"Condition.B_z_RT\" cc2 <- column_contrast(pattern_A = \"^Condition\\\\.A_z_RT$\",                        pattern_B = \"^Condition\\\\.B_z_RT$\",                        name = \"CondA_vs_CondB_for_RT\")  # Test a specific basis function (e.g., basis spline #3) # Assumes column names like \"TermName_Condition.Tag_b03\" cc3 <- column_contrast(pattern_A = \"_b03$\", name = \"Basis_3_Effect\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract columns — columns.Scale","title":"Extract columns — columns.Scale","text":"Extract columns","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract columns — columns.Scale","text":"","code":"# S3 method for class 'Scale' columns(x, ...)  # S3 method for class 'ScaleWithin' columns(x, ...)  # S3 method for class 'RobustScale' columns(x, ...)  columns(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract columns — columns.Scale","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract columns — columns.Scale","text":"Character vector column names produced object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/condition_basis_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an event_term to a per-condition basis list — condition_basis_list","title":"Convert an event_term to a per-condition basis list — condition_basis_list","text":"lightweight wrapper around convolve() post-processes resulting design matrix named list T x d matrices - one per experimental condition (\"base condition tag\").  keeps heavy lifting inside fmrireg exposing minimal, pipe-friendly API can used anywhere condition -> basis split required (e.g. CFALS).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/condition_basis_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an event_term to a per-condition basis list — condition_basis_list","text":"","code":"condition_basis_list(   x,   hrf,   sampling_frame,   ...,   output = c(\"condition_list\", \"matrix\") )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/condition_basis_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an event_term to a per-condition basis list — condition_basis_list","text":"x event_term object. hrf HRF object apply. sampling_frame sampling_frame object defining temporal grid. ... arguments passed convolve() (e.g. drop.empty = FALSE). output Either \"matrix\" (default) ordinary design matrix \"condition_list\" split--condition list.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/condition_basis_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an event_term to a per-condition basis list — condition_basis_list","text":"numeric matrix named list matrices, depending output.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract conditions from a design object — conditions","title":"Extract conditions from a design object — conditions","text":"Extract conditions design object","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract conditions from a design object — conditions","text":"","code":"conditions(x, drop.empty = TRUE, expand_basis = FALSE, ...)  # S3 method for class 'event_term' conditions(x, drop.empty = TRUE, expand_basis = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract conditions from a design object — conditions","text":"x object extract conditions . drop.empty Logical whether drop conditions events (default: TRUE). expand_basis Logical whether expand basis functions (default: FALSE). ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract conditions from a design object — conditions","text":"character vector condition names.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/construct.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct method — construct","title":"Construct method — construct","text":"Construct method","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/construct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct method — construct","text":"","code":"construct(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/construct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct method — construct","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/construct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct method — construct","text":"constructed object; return type depends method.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast Specification — contrast","title":"Contrast Specification — contrast","text":"Define linear contrast using formula expression.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast Specification — contrast","text":"","code":"contrast(form, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast Specification — contrast","text":"form formula describing contrast. name character label contrast. expression defining subset contrast applied (default: NULL).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast Specification — contrast","text":"list containing contrast specification.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast Specification — contrast","text":"","code":"# A minus B contrast contrast(~ A - B, name=\"A_B\") #> contrast: A_B  #>  A:  ~A - B   # With subsetting contrast(~ A - B, name=\"A_B_block1\", where = ~ block == 1) #> contrast: A_B_block1  #>  A:  ~A - B  #>  where:  ~block == 1"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Set of Contrasts — contrast_set","title":"Create a Set of Contrasts — contrast_set","text":"Construct list contrast_spec objects.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Set of Contrasts — contrast_set","text":"","code":"contrast_set(...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Set of Contrasts — contrast_set","text":"... variable-length list contrast_spec objects.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Set of Contrasts — contrast_set","text":"list contrast_spec objects class \"contrast_set\".","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Set of Contrasts — contrast_set","text":"","code":"c1 <- contrast(~ A - B, name=\"A_B\") c2 <- contrast(~ B - C, name=\"B_C\") contrast_set(c1,c2) #>  #> === Contrast Set === #>  #>  Overview: #>   * Number of contrasts: 2  #>   * Types of contrasts: #>     - contrast_formula_spec : 2  #>  #>   Individual Contrasts: #>  #> [1] A_B (contrast_formula_spec) #>     Formula: ~A - B #>  #> [2] B_C (contrast_formula_spec) #>     Formula: ~B - C #>"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"Compute contrast weights unit_contrast_spec object. Compute contrast weights oneway_contrast_spec object. Compute contrast weights interaction_contrast_spec object. Compute contrast weights poly_contrast_spec object. Compute contrast weights pair_contrast_spec object. Compute contrast weights column_contrast_spec object targeting design matrix columns based regex patterns. Compute contrast weights contrast_formula_spec object. Compute contrast weights contrast_diff_spec object. Compute contrast weights contrast specification within contrast_set object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"","code":"# S3 method for class 'unit_contrast_spec' contrast_weights(x, term, ...)  # S3 method for class 'oneway_contrast_spec' contrast_weights(x, term, ...)  # S3 method for class 'interaction_contrast_spec' contrast_weights(x, term, ...)  # S3 method for class 'poly_contrast_spec' contrast_weights(x, term, ...)  # S3 method for class 'pair_contrast_spec' contrast_weights(x, term, ...)  # S3 method for class 'column_contrast_spec' contrast_weights(x, term, ...)  # S3 method for class 'contrast_formula_spec' contrast_weights(x, term, ...)  # S3 method for class 'contrast_diff_spec' contrast_weights(x, term, ...)  # S3 method for class 'contrast_set' contrast_weights(x, term, ...)  contrast_weights(x, ...)  # S3 method for class 'convolved_term' contrast_weights(x, ...)  # S3 method for class 'event_model' contrast_weights(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"x object. term term object weights computed. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"list containing term, name, weights, condition names, contrast specification. list containing term, name, weights, condition names, contrast specification. list containing term, name, weights, condition names, contrast specification. list containing term, name, weights, condition names, contrast specification. list containing term, name, weights, condition names, contrast specification. list containing contrast details: term original event_term object. name name contrast. weights numeric matrix rows correspond full design matrix columns (.condnames(term, expanded = TRUE)) columns represent contrast(s). Usually one column. condnames Character vector potential expanded condition names term. contrast_spec original column_contrast_spec object. list containing term, name, weights, condition names, contrast specification. list containing term, name, weights, condition names, contrast specification. named list element result calling contrast_weights corresponding contrast_spec set. list names names individual contrasts. named list contrast weight objects matrices.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrast_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unit Contrast Weights — contrast_weights.unit_contrast_spec","text":"weight matrices returned contrast specification contain row names, matched column names corresponding term design matrix.  allows contrasts target subset term levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve contrast definitions for an event model — contrasts.event_model","title":"Retrieve contrast definitions for an event model — contrasts.event_model","text":"function collects contrast specifications defined term within model returns named list.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve contrast definitions for an event model — contrasts.event_model","text":"","code":"# S3 method for class 'event_model' contrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve contrast definitions for an event model — contrasts.event_model","text":"x event_model object. ... Unused.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve contrast definitions for an event model — contrasts.event_model","text":"named list contrast specifications.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve contrast definitions for an event term — contrasts.event_term","title":"Retrieve contrast definitions for an event term — contrasts.event_term","text":"accessor returns list contrast specifications attached term's originating hrfspec, .","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve contrast definitions for an event term — contrasts.event_term","text":"","code":"# S3 method for class 'event_term' contrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve contrast definitions for an event term — contrasts.event_term","text":"x event_term object. ... Unused.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.event_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve contrast definitions for an event term — contrasts.event_term","text":"list contrast specifications NULL none defined.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.hrfspec.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve contrast specifications from an hrfspec — contrasts.hrfspec","title":"Retrieve contrast specifications from an hrfspec — contrasts.hrfspec","text":"Retrieve contrast specifications hrfspec","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.hrfspec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve contrast specifications from an hrfspec — contrasts.hrfspec","text":"","code":"# S3 method for class 'hrfspec' contrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.hrfspec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve contrast specifications from an hrfspec — contrasts.hrfspec","text":"x hrfspec object. ... Unused.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.hrfspec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve contrast specifications from an hrfspec — contrasts.hrfspec","text":"list contrast specifications attached hrfspec, NULL.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract contrasts — contrasts","title":"Extract contrasts — contrasts","text":"Extract contrasts","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract contrasts — contrasts","text":"","code":"contrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract contrasts — contrasts","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract contrasts — contrasts","text":"named list contrast specifications.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolve events with a hemodynamic response function — convolve","title":"Convolve events with a hemodynamic response function — convolve","text":"Convolve events hemodynamic response function","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolve events with a hemodynamic response function — convolve","text":"","code":"convolve(   x,   hrf,   sampling_frame,   drop.empty = TRUE,   summate = TRUE,   precision = 0.1,   ... )  # S3 method for class 'event_term' convolve(   x,   hrf,   sampling_frame,   drop.empty = TRUE,   summate = TRUE,   precision = 0.3,   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolve events with a hemodynamic response function — convolve","text":"x events convolve. hrf hemodynamic response function. sampling_frame sampling frame. drop.empty Logical indicating whether drop columns zeros. summate Logical indicating whether sum convolved signals. precision Numeric specifying temporal precision convolution. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolve events with a hemodynamic response function — convolve","text":"matrix-like (often tibble) convolved regressors.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolve HRF with Design Matrix. — convolve_design","title":"Convolve HRF with Design Matrix. — convolve_design","text":"Convolves HRF design matrix (one column per condition) produce list regressors.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolve HRF with Design Matrix. — convolve_design","text":"","code":"convolve_design(hrf, dmat, globons, durations, summate = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolve HRF with Design Matrix. — convolve_design","text":"hrf function representing HRF. dmat Design matrix (named columns). globons Numeric vector global onsets. durations Numeric vector event durations. summate Logical; TRUE, summate convolved HRF (default: TRUE).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/convolve_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolve HRF with Design Matrix. — convolve_design","text":"list regressors (one column).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.baseline_model.html","id":null,"dir":"Reference","previous_headings":"","what":"correlation_map.baseline_model — correlation_map.baseline_model","title":"correlation_map.baseline_model — correlation_map.baseline_model","text":"Generates correlation heatmap columns baseline_model's design matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.baseline_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"correlation_map.baseline_model — correlation_map.baseline_model","text":"","code":"# S3 method for class 'baseline_model' correlation_map(   x,   method = c(\"pearson\", \"spearman\"),   half_matrix = FALSE,   absolute_limits = TRUE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.baseline_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"correlation_map.baseline_model — correlation_map.baseline_model","text":"x baseline_model. method Correlation method (e.g., \"pearson\", \"spearman\"). half_matrix Logical; TRUE, display lower triangle matrix. absolute_limits Logical; TRUE, set color scale limits -1 1. ... Additional arguments passed internal plotting functions.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.baseline_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"correlation_map.baseline_model — correlation_map.baseline_model","text":"ggplot2 plot object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.baseline_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"correlation_map.baseline_model — correlation_map.baseline_model","text":"","code":"sframe <- fmrihrf::sampling_frame(blocklens = 5, TR = 1) bmod <- baseline_model(sframe = sframe) if (requireNamespace(\"ggplot2\", quietly = TRUE)) correlation_map(bmod) #> Warning: the standard deviation is zero"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Regressor Correlations — correlation_map.event_model","title":"Visualize Regressor Correlations — correlation_map.event_model","text":"Creates heatmap visualization correlation matrix regressors event_model object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Regressor Correlations — correlation_map.event_model","text":"","code":"# S3 method for class 'event_model' correlation_map(x, rotate_x_text = TRUE, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Regressor Correlations — correlation_map.event_model","text":"x event_model object. rotate_x_text Logical. Whether rotate x-axis labels. Default TRUE. ... Additional arguments passed geom_tile.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Regressor Correlations — correlation_map.event_model","text":"ggplot2 object showing correlation matrix heatmap.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute correlation map — correlation_map","title":"Compute correlation map — correlation_map","text":"Compute correlation map","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute correlation map — correlation_map","text":"","code":"correlation_map(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute correlation map — correlation_map","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/correlation_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute correlation map — correlation_map","text":"ggplot2 object visualizing regressor correlations.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Covariate Term — covariate","title":"Construct a Covariate Term — covariate","text":"Creates covariate term added directly fMRI model without convolved hemodynamic response function (HRF). useful including nuisance variables, continuous covariates, regressors undergo HRF convolution.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Covariate Term — covariate","text":"","code":"covariate(..., data, id = NULL, prefix = NULL, subset = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Covariate Term — covariate","text":"... variable argument set covariate names. data data.frame containing variables. id optional identifier covariate term. prefix optional prefix add covariate names. subset Optional expression used subset covariate data.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Covariate Term — covariate","text":"list containing information covariate term class 'covariatespec' can used within event_model.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/covariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a Covariate Term — covariate","text":"fMRI analysis, predictors convolved HRF represent: Continuous physiological measurements (e.g., heart rate, respiration) Motion parameters head movement correction Scanner drift technical artifacts Behavioral measures directly correlate BOLD signal Global signal nuisance variables covariate term can combined standard HRF-convolved event terms model. example:","code":"model <- event_model(onset ~ hrf(stimulus) + covariate(motion_x, motion_y, data = cov_data),                     data = events, block = ~ 1, sampling_frame = sframe)"},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/covariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Covariate Term — covariate","text":"","code":"# Add motion parameters as covariates motion_data <- data.frame(   x = rnorm(100),  # x translation   y = rnorm(100)   # y translation ) cv <- covariate(x, y, data = motion_data, prefix = \"motion\")  # Combine with event model sframe <- sampling_frame(blocklens = c(100), TR = 2) # 50 events, strictly increasing onsets per block event_data <- data.frame(   stimulus = factor(rep(c(\"A\", \"B\"), 25)),   onset = seq(0, by = 4, length.out = 50) )  # Full model with both HRF-convolved events and non-convolved covariates model <- event_model(   onset ~ hrf(stimulus) + covariate(x, y, data = motion_data, id = \"motion\"),   data = event_data,   block = ~ 1,   sampling_frame = sframe )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.baseline_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap visualization of the baseline_model design matrix — design_map.baseline_model","title":"Heatmap visualization of the baseline_model design matrix — design_map.baseline_model","text":"Produces heatmap columns design matrix baseline_model object, rows corresponding scans columns corresponding regressors. default, draws horizontal lines separating runs (blocks), rotates column labels diagonally.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.baseline_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap visualization of the baseline_model design matrix — design_map.baseline_model","text":"","code":"# S3 method for class 'baseline_model' design_map(   x,   block_separators = TRUE,   rotate_x_text = TRUE,   fill_midpoint = NULL,   fill_limits = NULL,   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.baseline_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap visualization of the baseline_model design matrix — design_map.baseline_model","text":"x baseline_model object. block_separators Logical; TRUE, draw white horizontal lines blocks. rotate_x_text Logical; TRUE, rotate x-axis labels 45 degrees. fill_midpoint Numeric NULL; NULL, used midpoint ggplot2::scale_fill_gradient2() center color scale (example 0). fill_limits Numeric vector length 2 NULL; passed fill scale limits argument. Can clip expand color range. ... Additional arguments forwarded ggplot2::geom_tile().","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.baseline_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap visualization of the baseline_model design matrix — design_map.baseline_model","text":"ggplot2 plot object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.baseline_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap visualization of the baseline_model design matrix — design_map.baseline_model","text":"","code":"sframe <- fmrihrf::sampling_frame(blocklens = 5, TR = 1) bmod <- baseline_model(sframe = sframe) if (requireNamespace(\"ggplot2\", quietly = TRUE)) design_map(bmod)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Event Model Design Matrix — design_map.event_model","title":"Visualize Event Model Design Matrix — design_map.event_model","text":"Creates heatmap visualization design matrix event_model object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Event Model Design Matrix — design_map.event_model","text":"","code":"# S3 method for class 'event_model' design_map(   x,   block_separators = TRUE,   rotate_x_text = TRUE,   fill_midpoint = NULL,   fill_limits = NULL,   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Event Model Design Matrix — design_map.event_model","text":"x event_model object. block_separators Logical. Whether draw separators blocks/runs. Default TRUE. rotate_x_text Logical. Whether rotate x-axis labels. Default TRUE. fill_midpoint Numeric. Midpoint color scale. NULL, uses gradient scale. fill_limits Numeric vector length 2. Limits fill scale. ... Additional arguments passed geom_tile.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Event Model Design Matrix — design_map.event_model","text":"ggplot2 object showing design matrix heatmap.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute design map — design_map","title":"Compute design map — design_map","text":"Compute design map","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute design map — design_map","text":"","code":"design_map(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute design map — design_map","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute design map — design_map","text":"ggplot2 object visualizing design matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or construct a design matrix — design_matrix.baseline_model","title":"Extract or construct a design matrix — design_matrix.baseline_model","text":"Extract construct design matrix","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or construct a design matrix — design_matrix.baseline_model","text":"","code":"# S3 method for class 'baseline_model' design_matrix(x, blockid = NULL, allrows = FALSE, ...)  # S3 method for class 'baseline_term' design_matrix(x, blockid = NULL, allrows = FALSE, ...)  design_matrix(x, ...)  # S3 method for class 'event_model' design_matrix(x, blockid = NULL, ...)  # S3 method for class 'event_term' design_matrix(x, drop.empty = TRUE, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or construct a design matrix — design_matrix.baseline_model","text":"x object extract design matrix . blockid Block ID(s) extract (baseline_term method). allrows Whether return rows (baseline_term method). ... Additional arguments. drop.empty Whether drop empty columns (event_term method).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/design_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or construct a design matrix — design_matrix.baseline_model","text":"matrix-like object (often tibble) rows = scans, cols = regressors.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-correlation_map_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Design Matrix Visualization Methods — .correlation_map_common","title":"Design Matrix Visualization Methods — .correlation_map_common","text":"file contains methods visualizing design matrices heatmaps using ggplot2.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-correlation_map_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design Matrix Visualization Methods — .correlation_map_common","text":"","code":".correlation_map_common(   DM,   method = c(\"pearson\", \"spearman\"),   half_matrix = FALSE,   absolute_limits = TRUE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-correlation_map_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design Matrix Visualization Methods — .correlation_map_common","text":"ggplot2 heatmap correlation matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-fmridesign_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extension Registry for External HRF Specifications — .fmridesign_extensions","title":"Extension Registry for External HRF Specifications — .fmridesign_extensions","text":"file provides extension mechanism packages register HRF specification types fmridesign.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-fmridesign_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extension Registry for External HRF Specifications — .fmridesign_extensions","text":"","code":".fmridesign_extensions"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-fmridesign_extensions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Extension Registry for External HRF Specifications — .fmridesign_extensions","text":"object class environment length 0.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-fmridesign_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extension Registry for External HRF Specifications — .fmridesign_extensions","text":"environment used internally registry.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-fmridesign_extensions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extension Registry for External HRF Specifications — .fmridesign_extensions","text":"Internal registry environment external HRF specs Holds registration data external HRF specification classes.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-trial_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper for generating trial factors — .trial_factor","title":"Internal helper for generating trial factors — .trial_factor","text":"Internal helper generating trial factors","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-trial_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper for generating trial factors — .trial_factor","text":"","code":".trial_factor(n)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-trial_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper for generating trial factors — .trial_factor","text":"n Length factor generate.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/dot-trial_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal helper for generating trial factors — .trial_factor","text":"factor length n zero-padded sequential levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements from an object — elements","title":"Extract elements from an object — elements","text":"Extract elements object","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements from an object — elements","text":"","code":"elements(x, ...)  # S3 method for class 'event' elements(x, what = c(\"values\", \"labels\"), transformed = TRUE, ...)  # S3 method for class 'event_term' elements(x, what = c(\"values\", \"labels\"), ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elements from an object — elements","text":"x object extract elements . ... Additional arguments. Character string specifying extract: \"values\" numeric/actual values, \"labels\" descriptive labels/names. transformed Logical indicating whether return transformed values. Default TRUE.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements from an object — elements","text":"Requested elements; structure depends method (e.g., numeric values labels).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event set from a ParametricBasis object. — event_basis","title":"Create an event set from a ParametricBasis object. — event_basis","text":"user-facing wrapper around internal event() constructor, specifically creating event sequences modulated basis set.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event set from a ParametricBasis object. — event_basis","text":"","code":"event_basis(   basis,   name = NULL,   onsets,   blockids = 1,   durations = 0,   subset = NULL )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event set from a ParametricBasis object. — event_basis","text":"basis ParametricBasis object (e.g., BSpline, PolynomialBasis). name Optional name event variable. NULL, uses basis$name. onsets Numeric vector event onsets (seconds). blockids Numeric vector block IDs. durations Numeric vector event durations (seconds), scalar. subset Optional logical vector indicating events keep. provided, vector must match onsets length contain NA values.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event set from a ParametricBasis object. — event_basis","text":"S3 object class event event_seq.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an event set from a ParametricBasis object. — event_basis","text":"","code":"basis <- BSpline(1:21, 3) onsets <- seq(0, 20, length.out = 21) blockids <- rep(1, length(onsets)) ebasis <- event_basis(basis, onsets=onsets, blockids=blockids) print(ebasis) #>  #> ── Event Sequence: bs_. ──────────────────────────────────────────────────────── #> * Type: Continuous #> * Columns: 01, 02, 03 #> * Events: 21 #>  #> ── Timing ── #>  #> * Onset Range: 0.00 - 20.00 sec #> * Duration Range: 0.00 - 0.00 sec #>  #> ── Blocks ── #>  #> * Number of Blocks: 1 #> * Block IDs: 1 levels(ebasis) #> [1] \"01\" \"02\" \"03\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a categorical event sequence from a factor. — event_factor","title":"Create a categorical event sequence from a factor. — event_factor","text":"user-facing wrapper around internal event() constructor, specifically creating categorical event sequences factors characters.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a categorical event sequence from a factor. — event_factor","text":"","code":"event_factor(fac, name, onsets, blockids = 1, durations = 0, subset = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a categorical event sequence from a factor. — event_factor","text":"fac factor something coercible factor. name Name event variable. onsets Numeric vector event onsets (seconds). blockids Numeric vector block IDs. durations Numeric vector event durations (seconds), scalar. subset Optional logical vector indicating events keep. provided, vector must match onsets length contain NA values. Column names sanitized using .sanitizeName() provided. column names missing unique, deterministic feature suffixes (f01, f02, ...) generated instead. resulting names returned levels() event object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a categorical event sequence from a factor. — event_factor","text":"S3 object class event event_seq.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a categorical event sequence from a factor. — event_factor","text":"","code":"ef_onsets <- seq(1, 100, length.out = 6) efac <- event_factor(factor(c(\"a\", \"b\", \"c\", \"a\", \"b\", \"c\")), \"abc\",          onsets = ef_onsets, blockids = rep(1, length(ef_onsets))) print(efac) #>  #> ── Event Sequence: abc ───────────────────────────────────────────────────────── #> * Type: Categorical #> * Levels: a, b, c #> * Events: 6 #>  #> ── Timing ── #>  #> * Onset Range: 1.00 - 100.00 sec #> * Duration Range: 0.00 - 0.00 sec #>  #> ── Blocks ── #>  #> * Number of Blocks: 1 #> * Block IDs: 1 levels(efac) #> [1] \"a\" \"b\" \"c\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a continuous event set from a matrix. — event_matrix","title":"Create a continuous event set from a matrix. — event_matrix","text":"user-facing wrapper around internal event() constructor, specifically creating continuous event sequences numeric matrices.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a continuous event set from a matrix. — event_matrix","text":"","code":"event_matrix(mat, name, onsets, blockids = 1, durations = 0, subset = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a continuous event set from a matrix. — event_matrix","text":"mat numeric matrix continuous event values (one row per event). name Name event variable. onsets Numeric vector event onsets (seconds). blockids Numeric vector block IDs. durations Numeric vector event durations (seconds), scalar. subset Optional logical vector indicating events keep. provided, vector must match onsets length contain NA values. mat column names one column, names sanitized using .sanitizeName() stored. sanitized column names returned levels() resulting event object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a continuous event set from a matrix. — event_matrix","text":"S3 object class event event_seq.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a continuous event set from a matrix. — event_matrix","text":"","code":"mat <- matrix(rnorm(20), 10, 2, dimnames=list(NULL, c(\"Val1\", \"Val2\"))) onsets <- seq(1, 100, length.out = 10) durations <- rep(1, 10) blockids <- rep(1, 10) eset <- event_matrix(mat, \"eset\", onsets, blockids, durations) print(eset) #>  #> ── Event Sequence: eset ──────────────────────────────────────────────────────── #> * Type: Continuous #> * Columns: Val1, Val2 #> * Events: 10 #>  #> ── Timing ── #>  #> * Onset Range: 1.00 - 100.00 sec #> * Duration Range: 1.00 - 1.00 sec #>  #> ── Blocks ── #>  #> * Number of Blocks: 1 #> * Block IDs: 1 #>  #> ── Values ── #>  #> * Value Range: -1.56 - 1.23 columns(eset) # Alias for levels #> [1] \"Val1\" \"Val2\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic functions for fmridesign package — event_model","title":"Generic functions for fmridesign package — event_model","text":"file contains generic functions used throughout fmridesign package. generics define interface working event models, baseline models, related design components. Construct event model main constructor event_model objects. unifies previous formula list-based interfaces uses efficient internal pipeline.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic functions for fmridesign package — event_model","text":"","code":"event_model(   formula_or_list,   data,   block,   sampling_frame,   durations = 0,   drop_empty = TRUE,   precision = 0.3,   parallel = FALSE,   progress = FALSE,   ... )  event_model(   formula_or_list,   data,   block,   sampling_frame,   durations = 0,   drop_empty = TRUE,   precision = 0.3,   parallel = FALSE,   progress = FALSE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic functions for fmridesign package — event_model","text":"formula_or_list Either formula (e.g., onset ~ hrf(cond) + hrf(mod)) list pre-defined hrfspec objects. data data.frame containing event variables referenced formula needed hrfspec objects. block formula (e.g., ~ run) vector specifying block/run event. sampling_frame object class sampling_frame defining scan timing (TR, block lengths). durations Numeric vector scalar specifying event durations (seconds). Default 0. drop_empty Logical indicating whether drop empty events term construction. Default TRUE. precision Numeric precision HRF sampling/convolution. Default 0.3. parallel Logical indicating whether use parallel processing term convolution (requires future.apply). Default FALSE. progress Logical indicating whether show progress bar term realisation. Default FALSE. ... Additional arguments (currently unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic functions for fmridesign package — event_model","text":"event_model object describing task design. object class c(\"event_model\", \"list\") containing terms, design matrix, sampling frame, metadata.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic functions for fmridesign package — event_model","text":"function creates event-based fMRI regression model, represented data structure.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":"column-naming","dir":"Reference","previous_headings":"","what":"Column Naming","title":"Generic functions for fmridesign package — event_model","text":"columns resulting design matrix follow naming convention: term_tag + _ + condition_tag + _b## basis suffix : term_tag: unique tag assigned hrf() term (see ). condition_tag: Represents specific factor level continuous regressor within term (e.g., condition., poly_RT_01, condition.A_task.go). _b##: Optional suffix added HRFs multiple basis functions (e.g., _b01, _b02).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":"term-naming-and-clash-resolution","dir":"Reference","previous_headings":"","what":"Term Naming and Clash Resolution","title":"Generic functions for fmridesign package — event_model","text":"term model (typically defined hrf() call formula) gets unique term_tag. tag used prefix columns generated term. Default Naming: explicit id (name) given hrf(), tag derived variable names (e.g., hrf(condition) -> condition, hrf(RT, acc) -> RT_acc). Explicit Naming: Use id= within hrf() explicit tag (e.g., hrf(condition, id=\"CondMain\")). Sanitization: Dots (.) tags converted underscores (_). Clash Resolution: multiple terms generate tag, # number appended ensure uniqueness (e.g., condition, condition#1). consistent naming scheme replaces previous compact qualified styles.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic functions for fmridesign package — event_model","text":"","code":"# Example using formula interface des <- data.frame(onset = seq(0, 90, by=10),                   run = rep(1:2, each=5),                   cond = factor(rep(c(\"A\",\"B\"), 5)),                   mod = rnorm(10)) sframe <- fmrihrf::sampling_frame(blocklens=c(50, 60), TR=2)  ev_model_form <- event_model(onset ~ hrf(cond) + hrf(mod, basis=\"spmg3\"),                              data = des, block = ~run, sampling_frame = sframe) print(ev_model_form) #>  #> ── fMRI Event Model ──────────────────────────────────────────────────────────── #> Number of Terms: 2 #> Number of Events: 10 #> Number of Blocks: 2 #> Total Scans: 110 #> Design Matrix Dimensions: 110 x 5 #>  #> ── Terms ── #>  #> • cond (<event_term>) #> • mod (<event_term>) #>  #> ── Design Matrix Preview ── #>  #>           cond_cond.A cond_cond.B mod_mod_b01 mod_mod_b02 #>    Scan 1   0.062       0.000      -0.040      -0.126     #>    Scan 2   1.138       0.000      -0.727      -0.407     #>    Scan 3   1.744       0.000      -1.115       0.042     #> ... head(design_matrix(ev_model_form)) #> # A tibble: 6 × 5 #>   cond_cond.A cond_cond.B mod_mod_b01 mod_mod_b02 mod_mod_b03 #>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl> #> 1      0.0624      0          -0.0399     -0.126     -0.262   #> 2      1.14        0          -0.727      -0.407      0.123   #> 3      1.74        0          -1.12        0.0420     0.205   #> 4      1.20        0          -0.769       0.236      0.00277 #> 5      0.552       0          -0.353       0.163     -0.0523  #> 6      0.192       0.0341     -0.151      -0.0338    -0.314    # Example using list interface (less common) # spec1 <- hrf(cond) # spec2 <- hrf(mod, basis=\"spmg3\") # ev_model_list <- event_model(list(spec1, spec2), data=des, block=des$run, sampling_frame=sframe) # print(ev_model_list)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract event table — event_table","title":"Extract event table — event_table","text":"Extract event table","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract event table — event_table","text":"","code":"event_table(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract event table — event_table","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract event table — event_table","text":"data.frame/tibble event rows.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event model term from a named list of variables. — event_term","title":"Create an event model term from a named list of variables. — event_term","text":"Generates event_term object represents combination one event sequences (e.g., factor crossed numeric modulator). takes list variables (factors, numeric vectors, matrices, basis objects) along shared onsets, block IDs, durations. uses EV factory internally create standardized event objects variable.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event model term from a named list of variables. — event_term","text":"","code":"event_term(evlist, onsets, blockids, durations = 0, subset = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event model term from a named list of variables. — event_term","text":"evlist named list variables (factors, numeric, matrices, ParametricBasis objects). names used variable identifiers within term. onsets Numeric vector onset times (seconds). blockids Numeric vector block numbers (non-decreasing integers). durations Numeric vector event durations (seconds, default 0). Can scalar (recycled) vector matching length onsets. subset Optional logical vector indicating events retain (applied processing).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event model term from a named list of variables. — event_term","text":"list object class c(\"event_term\", \"event_seq\"). Contains: varname Concatenated variable names evlist. events named list processed event objects. subset subset vector used. event_table tibble representing combinations descriptive levels/names event term, constructed using elements(..., values=FALSE). onsets Numeric vector onsets (processing/subsetting). blockids Numeric vector block IDs (processing/subsetting). durations Numeric vector durations (processing/subsetting).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an event model term from a named list of variables. — event_term","text":"","code":"x1 <- factor(rep(letters[1:3], 10)) x2 <- factor(rep(1:3, each = 10)) onsets <- seq(1, 100, length.out = 30) blockids <- rep(1:3, each = 10)  eterm <- event_term(list(Condition = x1, Group = x2),                     onsets = onsets,                     blockids = blockids) print(eterm) #>  #> ── Event Term: Condition:Group ───────────────────────────────────────────────── #> * Number of Events: 30 #> * Variables: Condition and Group #>  #> ── Variable Types ── #>  #> * Condition: Categorical #> * Group: Categorical #>  #> ── Timing ── #>  #> * Onset Range: 1.00 - 100.00 sec #> * Duration Range: 0.00 - 0.00 sec #>  #> ── Blocks ── #>  #> * Number of Blocks: 3 #> * Block IDs: 1, 2, 3 #> * Events per Block: 10, 10, 10 head(event_table(eterm)) #> # A tibble: 6 × 2 #>   Condition Group #>   <fct>     <fct> #> 1 a         1     #> 2 b         1     #> 3 c         1     #> 4 a         1     #> 5 b         1     #> 6 c         1     levels(eterm) #> NULL head(design_matrix(eterm)) #> # A tibble: 6 × 9 #>   Condition.a_Group.1 Condition.b_Group.1 Condition.c_Group.1 #>                 <dbl>               <dbl>               <dbl> #> 1                   1                   0                   0 #> 2                   0                   1                   0 #> 3                   0                   0                   1 #> 4                   1                   0                   0 #> 5                   0                   1                   0 #> 6                   0                   0                   1 #> # ℹ 6 more variables: Condition.a_Group.2 <dbl>, Condition.b_Group.2 <dbl>, #> #   Condition.c_Group.2 <dbl>, Condition.a_Group.3 <dbl>, #> #   Condition.b_Group.3 <dbl>, Condition.c_Group.3 <dbl>"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract event terms — event_terms","title":"Extract event terms — event_terms","text":"Extract event terms","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract event terms — event_terms","text":"","code":"event_terms(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract event terms — event_terms","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract event terms — event_terms","text":"named list event term objects.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a continuous event sequence from a numeric vector. — event_variable","title":"Create a continuous event sequence from a numeric vector. — event_variable","text":"user-facing wrapper around internal event() constructor, specifically creating continuous event sequences numeric vectors.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a continuous event sequence from a numeric vector. — event_variable","text":"","code":"event_variable(vec, name, onsets, blockids = 1, durations = 0, subset = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a continuous event sequence from a numeric vector. — event_variable","text":"vec Numeric vector representing continuous event values. name Name event variable. onsets Numeric vector event onsets (seconds). blockids Numeric vector block IDs. durations Numeric vector event durations (seconds), scalar. subset Optional logical vector indicating events keep. provided, vector must match onsets length contain NA values.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a continuous event sequence from a numeric vector. — event_variable","text":"S3 object class event event_seq.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/event_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a continuous event sequence from a numeric vector. — event_variable","text":"","code":"ev_onsets <- seq(1, 100, length.out = 6) evar <- event_variable(c(1, 2, 3, 4, 5, 6), \"example_var\",                         onsets = ev_onsets, blockids = rep(1, length(ev_onsets))) print(evar) #>  #> ── Event Sequence: example_var ───────────────────────────────────────────────── #> * Type: Continuous #> * Columns: example_var #> * Events: 6 #>  #> ── Timing ── #>  #> * Onset Range: 1.00 - 100.00 sec #> * Duration Range: 0.00 - 0.00 sec #>  #> ── Blocks ── #>  #> * Number of Blocks: 1 #> * Block IDs: 1 #>  #> ── Values ── #>  #> * Value Range: 1.00 - 6.00 is_continuous(evar) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/feature_suffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Feature Suffix — feature_suffix","title":"Create Feature Suffix — feature_suffix","text":"Generates f## suffix multi-column continuous events.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/feature_suffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Feature Suffix — feature_suffix","text":"","code":"feature_suffix(j, nf)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/feature_suffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Feature Suffix — feature_suffix","text":"j Integer vector feature indices (1-based). nf Total number features.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/feature_suffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Feature Suffix — feature_suffix","text":"Character vector suffixes (e.g., f01, f02).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/feature_suffix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Feature Suffix — feature_suffix","text":"","code":"feature_suffix(1:3, 5) #> [1] \"f01\" \"f02\" \"f03\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/fmrihrf-reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"fmrihrf reexports — fmrihrf-reexports","title":"fmrihrf reexports — fmrihrf-reexports","text":"Re-exported functions fmrihrf package convenience. See upstream fmrihrf documentation details usage return values function. functions re-exported fmrihrf package. Note: packages loaded, R show masking warnings. expected harmless - functions work identically.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/fmrihrf-reexports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fmrihrf reexports — fmrihrf-reexports","text":"","code":"onsets(x, ...)  durations(x, ...)  blockids(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/fmrihrf-reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fmrihrf reexports — fmrihrf-reexports","text":"See corresponding fmrihrf function documentation.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/fmrihrf-reexports.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fmrihrf reexports — fmrihrf-reexports","text":"following generics re-exported: onsets: Extract onset times event objects durations: Extract durations event objects blockids: Extract block identifiers fmridesign adds S3 methods generics work : event_term objects convolved_term objects event_model objects","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_all_external_hrf_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All External HRF Function Names — get_all_external_hrf_functions","title":"Get All External HRF Function Names — get_all_external_hrf_functions","text":"Returns function names recognized formulas registered external packages.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_all_external_hrf_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All External HRF Function Names — get_all_external_hrf_functions","text":"","code":"get_all_external_hrf_functions()"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_all_external_hrf_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All External HRF Function Names — get_all_external_hrf_functions","text":"Character vector function names","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the HRF Function Name for External Specifications — get_external_hrfspec_functions","title":"Get the HRF Function Name for External Specifications — get_external_hrfspec_functions","text":"Returns function name(s) recognized formulas given external HRF specification class.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the HRF Function Name for External Specifications — get_external_hrfspec_functions","text":"","code":"get_external_hrfspec_functions(spec_class)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the HRF Function Name for External Specifications — get_external_hrfspec_functions","text":"spec_class Character string naming class","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the HRF Function Name for External Specifications — get_external_hrfspec_functions","text":"Character vector function names, NULL registered","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Information About a Registered External HRF Specification — get_external_hrfspec_info","title":"Get Information About a Registered External HRF Specification — get_external_hrfspec_info","text":"Get Information Registered External HRF Specification","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Information About a Registered External HRF Specification — get_external_hrfspec_info","text":"","code":"get_external_hrfspec_info(spec_class)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Information About a Registered External HRF Specification — get_external_hrfspec_info","text":"spec_class Character string naming class","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/get_external_hrfspec_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Information About a Registered External HRF Specification — get_external_hrfspec_info","text":"list registration information, NULL registered","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/hrf.html","id":null,"dir":"Reference","previous_headings":"","what":"hemodynamic regressor specification function for model formulas. — hrf","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"function used formulas fitting functions, e.g. onsets ~ hrf(fac1,fac2) ... captures variables/expressions provided packages HRF/contrast information hrfspec object, processed event_model.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/hrf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"","code":"hrf(   ...,   basis = \"spmg1\",   onsets = NULL,   durations = NULL,   prefix = NULL,   subset = NULL,   precision = 0.3,   nbasis = 1,   contrasts = NULL,   id = NULL,   name = NULL,   lag = 0,   summate = TRUE )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/hrf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"... One variable names (bare character) expressions involving variables present data argument event_model. basis impulse response function name pre-supplied function, one : \"gamma\", \"spmg1\", \"spmg2\", \"spmg3\", \"bspline\", \"gaussian\", \"tent\", \"bs\". Can also HRF object. onsets optional onsets override. missing, onsets taken LHS main model formula. durations optional durations override. missing, durations argument event_model used. prefix character string prepended variable names used identify term. Can used disambiguate two hrf terms variable(s) different onsets basis functions. subset expression indicating subset 'onsets' keep. precision sampling precision seconds. nbasis number basis functions – used hemodynamic response functions (e.g. bspline) take variable number bases. contrasts one contrast_spec objects created contrast, pair_contrast etc. functions. Must NULL, single contrast spec, named list contrast specs. id unique character identifier used refer term, otherwise determined variable names. name Optional human-readable name term. lag temporal offset seconds added onset convolution summate whether impulse amplitudes sum duration greater 0.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/hrf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"hrfspec instance","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/hrf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hemodynamic regressor specification function for model formulas. — hrf","text":"","code":"## 'hrf' is typically used in the context of \\code{formula}s passed to `event_model`.  # Simple model with one factor form1 <- onsets ~ hrf(condition, basis=\"spmg1\")  # Model with factor and continuous modulator, using default SPMG1 for both terms form2 <- onsets ~ hrf(condition) + hrf(RT)  # Model with interaction term and SPMG3 basis form3 <- onsets ~ hrf(condition, RT, basis=\"spmg3\")  # Model with an expression and contrasts library(rlang) con1 <- pair_contrast(~ condition == \"A\", ~ condition == \"B\", name=\"AvB\") form4 <- onsets ~ hrf(condition, Poly(RT, 2), contrasts=con1)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/interaction_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Interaction Contrast — interaction_contrast","title":"Interaction Contrast — interaction_contrast","text":"Create interaction contrast specification","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/interaction_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interaction Contrast — interaction_contrast","text":"","code":"interaction_contrast(A, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/interaction_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interaction Contrast — interaction_contrast","text":"formula specifying interaction contrast name name contrast optional formula specifying subset contrast computed.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/interaction_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interaction Contrast — interaction_contrast","text":"interaction_contrast_spec object containing specification generating interaction contrast weights","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/interaction_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interaction Contrast — interaction_contrast","text":"","code":"# Create an interaction contrast for factors A and B con <- interaction_contrast(~ A * B, name = \"A_by_B\")  # Create an interaction contrast with a 'where' clause con <- interaction_contrast(~ A * B, name = \"A_by_B\",                           where = ~ block == 1)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if categorical — is_categorical","title":"Check if categorical — is_categorical","text":"Check categorical","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if categorical — is_categorical","text":"","code":"is_categorical(x, ...)  # S3 method for class 'event' is_categorical(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if categorical — is_categorical","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if categorical — is_categorical","text":"Logical scalar indicating whether x categorical.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if continuous — is_continuous","title":"Check if continuous — is_continuous","text":"Check continuous","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if continuous — is_continuous","text":"","code":"is_continuous(x, ...)  # S3 method for class 'event' is_continuous(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if continuous — is_continuous","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if continuous — is_continuous","text":"Logical scalar indicating whether x continuous.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_external_hrfspec.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Class is a Registered External HRF Specification — is_external_hrfspec","title":"Check if a Class is a Registered External HRF Specification — is_external_hrfspec","text":"Check Class Registered External HRF Specification","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_external_hrfspec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Class is a Registered External HRF Specification — is_external_hrfspec","text":"","code":"is_external_hrfspec(x)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_external_hrfspec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Class is a Registered External HRF Specification — is_external_hrfspec","text":"x object character string class name","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/is_external_hrfspec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Class is a Registered External HRF Specification — is_external_hrfspec","text":"Logical indicating class registered external HRF spec","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/labels.event.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Formatted Labels for a Single Event — labels.event","title":"Get Formatted Labels for a Single Event — labels.event","text":"Returns character vector formatted labels event object, using Variable[Level] style categorical events, Variable[Index] multi-column continuous events, just Variable single continuous events. Useful getting consistent labels individual event components. distinct levels() returns raw level names column names. Relies internal .level_vector helper function.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/labels.event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Formatted Labels for a Single Event — labels.event","text":"","code":"# S3 method for class 'event' labels(object, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/labels.event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Formatted Labels for a Single Event — labels.event","text":"object object class event. ... Additional arguments (unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/labels.event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Formatted Labels for a Single Event — labels.event","text":"character vector formatted labels, character(0) applicable.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/labels.event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Formatted Labels for a Single Event — labels.event","text":"","code":"fac <- factor(rep(c(\"A\", \"B\"), 3)) onsets <- 1:6 ev_fac <- event_factor(fac, \"Condition\", onsets, blockids = rep(1, length(onsets))) labels(ev_fac) # Should return c(\"Condition[A]\", \"Condition[B]\") #>              A              B  #> \"Condition[A]\" \"Condition[B]\"   vals <- 1:6 ev_num <- event_variable(vals, \"Modulator\", onsets, blockids = rep(1, length(onsets))) labels(ev_num) # Should return \"Modulator\" #> [1] \"Modulator\" #> attr(,\"orig_names\") #> [1] \"Modulator\"  mat <- matrix(1:12, 6, 2) colnames(mat) <- c(\"C1\", \"C2\") ev_mat <- event_matrix(mat, \"MatrixVar\", onsets, blockids = rep(1, length(onsets))) labels(ev_mat) # Should return c(\"MatrixVar[1]\", \"MatrixVar[2]\")  #>              C1              C2  #> \"MatrixVar[C1]\" \"MatrixVar[C2]\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/levels.event.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Levels from fmrireg Objects — levels.Scale","title":"Extract Levels from fmrireg Objects — levels.Scale","text":"Extract levels various fmrireg objects. methods extend base R levels generic work fmrireg-specific classes.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/levels.event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Levels from fmrireg Objects — levels.Scale","text":"","code":"# S3 method for class 'Scale' levels(x, ...)  # S3 method for class 'ScaleWithin' levels(x, ...)  # S3 method for class 'RobustScale' levels(x, ...)  # S3 method for class 'event' levels(x, ...)  # S3 method for class 'event' columns(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/levels.event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Levels from fmrireg Objects — levels.Scale","text":"x object extract levels. Can : event object - returns factor levels column names Scale object - returns variable name ScaleWithin object - returns variable name RobustScale object - returns variable name ... Additional arguments (currently unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/levels.event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Levels from fmrireg Objects — levels.Scale","text":"character vector levels names, depending object type: categorical events: factor levels continuous events: column names (matrices) variable name (vectors) scale objects: variable name scaled","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/levels.event.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Extract Levels from fmrireg Objects — levels.Scale","text":"columns(event): Alias levels.event","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/levels.event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Levels from fmrireg Objects — levels.Scale","text":"","code":"# Create a categorical event fac_event <- event_factor(   factor(c(\"A\", \"B\", \"A\", \"B\")),   name = \"condition\",   onsets = c(1, 10, 20, 30),   blockids = rep(1, 4) ) levels(fac_event)  # Returns: c(\"A\", \"B\") #> [1] \"A\" \"B\"  # Create a continuous event cont_event <- event_variable(   c(1.2, 0.8, 1.5, 0.9),   name = \"reaction_time\",   onsets = c(1, 10, 20, 30),   blockids = rep(1, 4) ) levels(cont_event)  # Returns: \"reaction_time\" #> [1] \"reaction_time\" #> attr(,\"orig_names\") #> [1] \"reaction_time\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/list_external_hrfspecs.html","id":null,"dir":"Reference","previous_headings":"","what":"List All Registered External HRF Specifications — list_external_hrfspecs","title":"List All Registered External HRF Specifications — list_external_hrfspecs","text":"List Registered External HRF Specifications","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/list_external_hrfspecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List All Registered External HRF Specifications — list_external_hrfspecs","text":"","code":"list_external_hrfspecs()"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/list_external_hrfspecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List All Registered External HRF Specifications — list_external_hrfspecs","text":"character vector registered class names","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/longnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract longnames — longnames","title":"Extract longnames — longnames","text":"Extract longnames","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/longnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract longnames — longnames","text":"","code":"longnames(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/longnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract longnames — longnames","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/longnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract longnames — longnames","text":"Character vector long (fully qualified) names.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.hrfspec.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of basis functions from hrfspec — nbasis.hrfspec","title":"Get number of basis functions from hrfspec — nbasis.hrfspec","text":"Get number basis functions hrfspec","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.hrfspec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of basis functions from hrfspec — nbasis.hrfspec","text":"","code":"# S3 method for class 'hrfspec' nbasis(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.hrfspec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of basis functions from hrfspec — nbasis.hrfspec","text":"x hrfspec object ... Additional arguments (unused)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.hrfspec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of basis functions from hrfspec — nbasis.hrfspec","text":"number basis functions","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Basis Functions — nbasis","title":"Number of Basis Functions — nbasis","text":"Get number basis functions various basis objects.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Basis Functions — nbasis","text":"","code":"# S3 method for class 'BSpline' nbasis(x, ...)  # S3 method for class 'Poly' nbasis(x, ...)  # S3 method for class 'Scale' nbasis(x, ...)  # S3 method for class 'ScaleWithin' nbasis(x, ...)  # S3 method for class 'RobustScale' nbasis(x, ...)  # S3 method for class 'Standardized' nbasis(x, ...)  # S3 method for class 'Ident' nbasis(x, ...)  # S3 method for class 'covariate_convolved_term' nbasis(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Basis Functions — nbasis","text":"x basis object (e.g., BSpline, Poly, Ident, etc.) ... Additional arguments (currently unused)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nbasis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Basis Functions — nbasis","text":"integer representing number basis functions","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nuisance.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Nuisance Specification — nuisance","title":"Create a Nuisance Specification — nuisance","text":"Returns nuisance term specification numeric matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nuisance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Nuisance Specification — nuisance","text":"","code":"nuisance(x)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nuisance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Nuisance Specification — nuisance","text":"x matrix.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nuisance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Nuisance Specification — nuisance","text":"object class \"nuisancespec\".","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/nuisance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Nuisance Specification — nuisance","text":"","code":"mat <- matrix(rnorm(10), nrow = 5) nuisance(mat) #> $name #> mat #>  #> attr(,\"class\") #> [1] \"nuisancespec\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/one_against_all_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"One Against All Contrast — one_against_all_contrast","title":"One Against All Contrast — one_against_all_contrast","text":"Construct contrasts comparing factor level average levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/one_against_all_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One Against All Contrast — one_against_all_contrast","text":"","code":"one_against_all_contrast(levels, facname, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/one_against_all_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One Against All Contrast — one_against_all_contrast","text":"levels vector factor levels compared. facname character string specifying name factor containing supplied levels. optional formula specifying subset contrast computed.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/one_against_all_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One Against All Contrast — one_against_all_contrast","text":"contrast_set object containing contrasts comparing factor level average levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/one_against_all_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One Against All Contrast — one_against_all_contrast","text":"","code":"fac <- factor(rep(c(\"A\", \"B\", \"C\"), 2)) con <- one_against_all_contrast(levels(fac), \"fac\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/oneway_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"One-way Contrast — oneway_contrast","title":"One-way Contrast — oneway_contrast","text":"Create one-way contrast specification","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/oneway_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-way Contrast — oneway_contrast","text":"","code":"oneway_contrast(A, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/oneway_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-way Contrast — oneway_contrast","text":"formula specifying contrast name name contrast optional formula specifying subset contrast computed.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/oneway_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-way Contrast — oneway_contrast","text":"oneway_contrast_spec object can used generate contrast weights","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/oneway_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-way Contrast — oneway_contrast","text":"","code":"# Create a one-way contrast for a factor 'basis' con <- oneway_contrast(~ basis, name = \"Main_basis\")  # Create a one-way contrast with a 'where' clause con <- oneway_contrast(~ basis, name = \"Main_basis\",                       where = ~ block == 1)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pair_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Pair Contrast — pair_contrast","title":"Pair Contrast — pair_contrast","text":"Construct sum--zero contrast two logical expressions. function particularly useful comparing specific conditions combinations conditions.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pair_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pair Contrast — pair_contrast","text":"","code":"pair_contrast(A, B, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pair_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pair Contrast — pair_contrast","text":"formula representing first logical expression contrast. B formula representing second logical expression contrast. name character string specifying name contrast (mandatory). optional formula specifying subset contrast computed.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pair_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pair Contrast — pair_contrast","text":"pair_contrast_spec object containing: First logical expression B Second logical expression Subsetting formula (provided) name Contrast name","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pair_contrast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pair Contrast — pair_contrast","text":"contrast constructed (- B), B logical expressions evaluate TRUE/FALSE observation. resulting contrast weights sum zero.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pair_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pair Contrast — pair_contrast","text":"","code":"# Compare faces vs scenes pair_contrast(~ category == \"face\", ~ category == \"scene\", name = \"face_vs_scene\") #> contrast: face_vs_scene  #>  A:  ~category == \"face\"  #>  B:  ~category == \"scene\"   # Compare with subsetting pair_contrast(~ category == \"face\", ~ category == \"scene\",              name = \"face_vs_scene_block1\",              where = ~ block == 1) #> contrast: face_vs_scene_block1  #>  A:  ~category == \"face\"  #>  B:  ~category == \"scene\"  #>  where:  ~block == 1   # Complex logical expressions pair_contrast(~ stimulus == \"face\" & emotion == \"happy\",              ~ stimulus == \"face\" & emotion == \"sad\",              name = \"happy_vs_sad_faces\") #> contrast: happy_vs_sad_faces  #>  A:  ~stimulus == \"face\" & emotion == \"happy\"  #>  B:  ~stimulus == \"face\" & emotion == \"sad\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pairwise_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise Contrasts — pairwise_contrasts","title":"Pairwise Contrasts — pairwise_contrasts","text":"Construct pairwise contrasts combinations factor levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pairwise_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise Contrasts — pairwise_contrasts","text":"","code":"pairwise_contrasts(levels, facname, where = NULL, name_prefix = \"con\")"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pairwise_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise Contrasts — pairwise_contrasts","text":"levels vector factor levels compared. facname name factor variable (column name design) levels belong . optional formula specifying subset contrast computed. name_prefix character string prefix generated contrast names (default: \"con\").","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pairwise_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise Contrasts — pairwise_contrasts","text":"contrast_set object containing pairwise contrasts combinations factor levels.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/pairwise_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise Contrasts — pairwise_contrasts","text":"","code":"# Assuming 'my_factor' is a column name pairwise_contrasts(c(\"A\", \"B\", \"C\"), facname = \"my_factor\") #>  #> === Contrast Set === #>  #>  Overview: #>   * Number of contrasts: 3  #>   * Types of contrasts: #>     - pair_contrast_spec : 3  #>  #>   Individual Contrasts: #>  #> [1] con_A_B (pair_contrast_spec) #>     Formula: ~my_factor == \"A\" vs  ~my_factor == \"B\" #>  #> [2] con_A_C (pair_contrast_spec) #>     Formula: ~my_factor == \"A\" vs  ~my_factor == \"C\" #>  #> [3] con_B_C (pair_contrast_spec) #>     Formula: ~my_factor == \"B\" vs  ~my_factor == \"C\" #>  pairwise_contrasts(c(\"A\", \"B\", \"C\"), facname = \"my_factor\", name_prefix = \"pair\") #>  #> === Contrast Set === #>  #>  Overview: #>   * Number of contrasts: 3  #>   * Types of contrasts: #>     - pair_contrast_spec : 3  #>  #>   Individual Contrasts: #>  #> [1] pair_A_B (pair_contrast_spec) #>     Formula: ~my_factor == \"A\" vs  ~my_factor == \"B\" #>  #> [2] pair_A_C (pair_contrast_spec) #>     Formula: ~my_factor == \"A\" vs  ~my_factor == \"C\" #>  #> [3] pair_B_C (pair_contrast_spec) #>     Formula: ~my_factor == \"B\" vs  ~my_factor == \"C\" #>"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.baseline_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Baseline Model — plot.baseline_model","title":"Plot a Baseline Model — plot.baseline_model","text":"Creates detailed ggplot2 visualization baseline model design matrix. non-constant term plotted time. plot includes separate panels block supports customization titles, axis labels, line size, color palette.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.baseline_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Baseline Model — plot.baseline_model","text":"","code":"# S3 method for class 'baseline_model' plot(   x,   term_name = NULL,   title = NULL,   xlab = \"Time\",   ylab = \"Design Matrix Value\",   line_size = 1,   color_palette = \"Set1\",   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.baseline_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Baseline Model — plot.baseline_model","text":"x baseline_model object. term_name Optional term name (character string) specifying term plot. omitted, first non-constant term plotted. title Optional title plot. provided, default title generated. xlab Label x-axis (default: \"Time\"). ylab Label y-axis (default: \"Design Matrix Value\"). line_size Numeric value line thickness (default: 1). color_palette palette name line colors (default: \"Set1\"). ... Additional arguments passed ggplot2::geom_line.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.baseline_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Baseline Model — plot.baseline_model","text":"ggplot2 plot object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.baseline_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Baseline Model — plot.baseline_model","text":"","code":"sframe <- fmrihrf::sampling_frame(blocklens = 5, TR = 1) bmod <- baseline_model(sframe = sframe) if (requireNamespace(\"ggplot2\", quietly = TRUE)) plot(bmod) #> No term_name specified, plotting the first available non-constant term: drift #> Warning: `aes_string()` was deprecated in ggplot2 3.0.0. #> ℹ Please use tidy evaluation idioms with `aes()`. #> ℹ See also `vignette(\"ggplot2-in-packages\")` for more information. #> ℹ The deprecated feature was likely used in the fmridesign package. #>   Please report the issue at <https://github.com/bbuchsbaum/fmridesign/issues>. #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> ℹ The deprecated feature was likely used in the fmridesign package. #>   Please report the issue at <https://github.com/bbuchsbaum/fmridesign/issues>."},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Event Model — plot.event_model","title":"Plot Event Model — plot.event_model","text":"Creates line plot visualization predicted BOLD response regressor event_model object.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Event Model — plot.event_model","text":"","code":"# S3 method for class 'event_model' plot(x, term_name = NULL, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Event Model — plot.event_model","text":"x event_model object. term_name Character. Name specific term plot. NULL, plots terms. ... Additional arguments (currently unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot.event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Event Model — plot.event_model","text":"ggplot2 object showing predicted BOLD timecourses.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot_contrasts.event_model.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_contrasts.event_model — plot_contrasts.event_model","title":"plot_contrasts.event_model — plot_contrasts.event_model","text":"Produces heatmap contrasts defined event_model. Rows = contrast (column F-contrast), columns = regressor full design matrix, fill color = contrast weight.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot_contrasts.event_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_contrasts.event_model — plot_contrasts.event_model","text":"","code":"# S3 method for class 'event_model' plot_contrasts(   x,   absolute_limits = FALSE,   rotate_x_text = TRUE,   scale_mode = c(\"auto\", \"diverging\", \"one_sided\"),   coord_fixed = TRUE,   ... )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot_contrasts.event_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_contrasts.event_model — plot_contrasts.event_model","text":"x event_model (lazily) defined contrasts. absolute_limits Logical; TRUE, color scale fixed (-1,1). FALSE, range set (min, max) weights. rotate_x_text Logical; TRUE, rotate x-axis labels readability. scale_mode Character; 'auto', 'diverging', 'one_sided' color scaling. coord_fixed Logical; TRUE, use fixed aspect ratio. ... arguments passed geom_tile, e.g. color=\"grey80\".","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot_contrasts.event_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_contrasts.event_model — plot_contrasts.event_model","text":"ggplot2 object (heatmap).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_contrasts — plot_contrasts","title":"plot_contrasts — plot_contrasts","text":"Generic function plotting contrasts.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_contrasts — plot_contrasts","text":"","code":"plot_contrasts(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/plot_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_contrasts — plot_contrasts","text":"x Object containing contrast information ... Additional arguments passed methods","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/poly_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Polynomial Contrast — poly_contrast","title":"Polynomial Contrast — poly_contrast","text":"Create polynomial contrasts testing trends across ordered factor levels. particularly useful analyzing factors natural ordering (e.g., time, dose).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/poly_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polynomial Contrast — poly_contrast","text":"","code":"poly_contrast(A, name, where = NULL, degree = 1, value_map = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/poly_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polynomial Contrast — poly_contrast","text":"formula specifying ordered factor. name character string identifying contrast. optional formula subsetting data. degree integer specifying degree polynomial (default: 1). value_map optional list mapping factor levels numeric values.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/poly_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polynomial Contrast — poly_contrast","text":"poly_contrast_spec object containing specification generating polynomial contrast weights.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/poly_contrast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Polynomial Contrast — poly_contrast","text":"function creates orthogonal polynomial contrasts specified degree. contrasts can test linear, quadratic, cubic, higher-order trends data. value_map parameter allows non-uniform spacing levels.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/poly_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polynomial Contrast — poly_contrast","text":"","code":"# Linear trend across time points pcon <- poly_contrast(~ time, name = \"linear_time\", degree = 1)  # Cubic trend with custom spacing pcon <- poly_contrast(~ dose, name = \"dose_cubic\",                      degree = 3,                      value_map = list(\"low\" = 0, \"med\" = 2, \"high\" = 5))"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a ParametricBasis object — predict.ParametricBasis","title":"Predict from a ParametricBasis object — predict.ParametricBasis","text":"Dispatch appropriate method transforming new data according specific parametric basis.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a ParametricBasis object — predict.ParametricBasis","text":"","code":"# S3 method for class 'ParametricBasis' predict(object, newdata, ...)  # S3 method for class 'Standardized' predict(object, newdata, ...)  # S3 method for class 'Poly' predict(object, newdata, ...)  # S3 method for class 'BSpline' predict(object, newdata, ...)  # S3 method for class 'Ident' predict(object, newdata, ...)  # S3 method for class 'Scale' predict(object, newdata, ...)  # S3 method for class 'ScaleWithin' predict(object, newdata, newgroup, ...)  # S3 method for class 'RobustScale' predict(object, newdata, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a ParametricBasis object — predict.ParametricBasis","text":"object ParametricBasis object. newdata Numeric vector transform. ... Additional arguments. newgroup Optional factor group-dependent bases.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a ParametricBasis object — predict.ParametricBasis","text":"numeric matrix transformed values (one column per basis component).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a Baseline Model — print.baseline_model","title":"Print a Baseline Model — print.baseline_model","text":"Displays key information baseline model components preview design matrix. Print contrast set. Print contrast specification. Print contrast. Print polynomial contrast specification. Print contrast difference specification. Provides concise summary event object using cli. Provides concise summary event_model object using cli. Provides concise summary event_term object using cli.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a Baseline Model — print.baseline_model","text":"","code":"# S3 method for class 'baseline_model' print(x, ...)  # S3 method for class 'contrast_set' print(x, ...)  # S3 method for class 'contrast_spec' print(x, ...)  # S3 method for class 'contrast' print(x, ...)  # S3 method for class 'poly_contrast_spec' print(x, ...)  # S3 method for class 'contrast_diff_spec' print(x, ...)  # S3 method for class 'event' print(x, ...)  # S3 method for class 'event_model' print(x, ...)  # S3 method for class 'fmri_term' print(x, ...)  # S3 method for class 'convolved_term' print(x, ...)  # S3 method for class 'event_term' print(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a Baseline Model — print.baseline_model","text":"x event_term object. ... Additional arguments (unused).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a Baseline Model — print.baseline_model","text":"input object, invisibly.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/print.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a Baseline Model — print.baseline_model","text":"","code":"sframe <- fmrihrf::sampling_frame(blocklens = 5, TR = 1) bmod <- baseline_model(sframe = sframe) print(bmod) #> ================================================ #>            Baseline Model                        #> ================================================ #>   Drift Components                            #>     * Name: baseline_constant_1           #>     * Basis type: constant                #>     * Degree: 1                           #>     * Drift columns: 1                    #>  #>   Additional Components                     #>     * Constant columns: 0                 #>     * Nuisance columns: 0                 #>  #>   Model Summary                             #>     * Total columns: 1                    #>  #>   Design Matrix Preview                     #>      1.000                                #>      1.000                                #>      1.000                                #> ================================================"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. fmrihrf as_hrf, blocklens, evaluate, gen_hrf, global_onsets, HRF, hrf_spmg1, regressor, samples, sampling_frame","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/register_hrfspec_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Register an External HRF Specification Type — register_hrfspec_extension","title":"Register an External HRF Specification Type — register_hrfspec_extension","text":"Register new HRF specification class can used event models. allows external packages extend fmridesign HRF types.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/register_hrfspec_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register an External HRF Specification Type — register_hrfspec_extension","text":"","code":"register_hrfspec_extension(   spec_class,   package,   convolved_class = NULL,   requires_external_processing = FALSE )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/register_hrfspec_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register an External HRF Specification Type — register_hrfspec_extension","text":"spec_class Character string naming class register package Character string naming package providing class convolved_class Optional character string naming associated convolved term class requires_external_processing Logical indicating spec skipped standard convolution (e.g., AFNI terms processed externally)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/register_hrfspec_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register an External HRF Specification Type — register_hrfspec_extension","text":"Invisible NULL","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/register_hrfspec_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register an External HRF Specification Type — register_hrfspec_extension","text":"","code":"if (FALSE) { # \\dontrun{ # In an external package's .onLoad function: register_hrfspec_extension(   spec_class = \"afni_hrfspec\",   package = \"afnireg\",   convolved_class = \"afni_hrf_convolved_term\",   requires_external_processing = TRUE ) } # }"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/regressors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract regressors — regressors","title":"Extract regressors — regressors","text":"Convolve event-term design matrix HRF return resulting regressors.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/regressors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract regressors — regressors","text":"","code":"regressors(x, ...)  # S3 method for class 'event_term' regressors(x, hrf, sampling_frame, summate = FALSE, drop.empty = TRUE, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/regressors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract regressors — regressors","text":"x object. ... Additional arguments. hrf HRF function sampling_frame sampling_frame object summate Logical; sum HRF responses drop.empty Logical; drop empty conditions","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/regressors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract regressors — regressors","text":"Character vector regressor names x.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/requires_external_processing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object Requires External Processing — requires_external_processing","title":"Check if an Object Requires External Processing — requires_external_processing","text":"Determines HRF specification convolved term handled external tools rather R's standard convolution.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/requires_external_processing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object Requires External Processing — requires_external_processing","text":"","code":"requires_external_processing(x)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/requires_external_processing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object Requires External Processing — requires_external_processing","text":"x object check","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/requires_external_processing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object Requires External Processing — requires_external_processing","text":"Logical indicating external processing required","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sanitize.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize Strings for Use in R Names — sanitize","title":"Sanitize Strings for Use in R Names — sanitize","text":"Wraps make.names allows control dot replacement.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sanitize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize Strings for Use in R Names — sanitize","text":"","code":"sanitize(x, allow_dot = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sanitize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize Strings for Use in R Names — sanitize","text":"x character vector. allow_dot Logical, FALSE, dots (.) replaced underscores (_).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sanitize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize Strings for Use in R Names — sanitize","text":"sanitized character vector.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sanitize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sanitize Strings for Use in R Names — sanitize","text":"","code":"sanitize(\"a.b c\") #> [1] \"a.b.c\" sanitize(\"a.b c\", allow_dot = FALSE) #> [1] \"a_b_c\""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/shortnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract shortnames — shortnames","title":"Extract shortnames — shortnames","text":"Extract shortnames","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/shortnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract shortnames — shortnames","text":"","code":"shortnames(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/shortnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract shortnames — shortnames","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/shortnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract shortnames — shortnames","text":"Character vector short names.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sliding_window_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Sliding-Window Contrasts (Disjoint) — sliding_window_contrasts","title":"Sliding-Window Contrasts (Disjoint) — sliding_window_contrasts","text":"Generate set -vs-B contrasts B adjacent, equally sized disjoint windows ordered factor. window size k, contrast compares = levels[:(+k-1)] B = levels[(+k):(+2k-1)]. yields length(levels) - 2*k + 1 contrasts detect local changes across sequence without overlapping masks.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sliding_window_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sliding-Window Contrasts (Disjoint) — sliding_window_contrasts","text":"","code":"sliding_window_contrasts(   levels,   facname,   window_size = 2,   where = NULL,   name_prefix = \"win\" )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sliding_window_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sliding-Window Contrasts (Disjoint) — sliding_window_contrasts","text":"levels Character vector ordered factor levels. facname Name factor (column design). window_size Positive integer window size (default 2). Optional formula subset events used computing weights. name_prefix Prefix generated contrast names (default \"win\").","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sliding_window_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sliding-Window Contrasts (Disjoint) — sliding_window_contrasts","text":"contrast_set pair_contrast specifications.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sliding_window_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sliding-Window Contrasts (Disjoint) — sliding_window_contrasts","text":"","code":"# For levels 1..5, generate 2 disjoint adjacent-window contrasts (k=2) sliding_window_contrasts(as.character(1:5), facname = \"intensity\", window_size = 2) #>  #> === Contrast Set === #>  #>  Overview: #>   * Number of contrasts: 2  #>   * Types of contrasts: #>     - pair_contrast_spec : 2  #>  #>   Individual Contrasts: #>  #> [1] win_1-2_vs_3-4 (pair_contrast_spec) #>     Formula: ~intensity %in% c(\"1\", \"2\") vs  ~intensity %in% c(\"3\", \"4\") #>  #> [2] win_2-3_vs_4-5 (pair_contrast_spec) #>     Formula: ~intensity %in% c(\"2\", \"3\") vs  ~intensity %in% c(\"4\", \"5\") #>   # For k=3 with 7 levels (disjoint windows): # A=[1,2,3] vs B=[4,5,6], then A=[2,3,4] vs B=[5,6,7] sliding_window_contrasts(LETTERS[1:7], facname = \"difficulty\", window_size = 3) #>  #> === Contrast Set === #>  #>  Overview: #>   * Number of contrasts: 2  #>   * Types of contrasts: #>     - pair_contrast_spec : 2  #>  #>   Individual Contrasts: #>  #> [1] win_A-B-C_vs_D-E-F (pair_contrast_spec) #>     Formula: ~difficulty %in% c(\"A\", \"B\", \"C\") vs  ~difficulty %in% c(\"D\", \"E\", \"F\") #>  #> [2] win_B-C-D_vs_E-F-G (pair_contrast_spec) #>     Formula: ~difficulty %in% c(\"B\", \"C\", \"D\") vs  ~difficulty %in% c(\"E\", \"F\", \"G\") #>"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_by_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Split by block — split_by_block","title":"Split by block — split_by_block","text":"Split block","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_by_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split by block — split_by_block","text":"","code":"split_by_block(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_by_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split by block — split_by_block","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_by_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split by block — split_by_block","text":"list split block/run.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_onsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Split onsets — split_onsets","title":"Split onsets — split_onsets","text":"Split onsets","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_onsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split onsets — split_onsets","text":"","code":"split_onsets(x, sframe, global = FALSE, blocksplit = FALSE, ...)  # S3 method for class 'event_term' split_onsets(x, sframe, global = FALSE, blocksplit = FALSE, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_onsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split onsets — split_onsets","text":"x object. sframe sampling frame object containing timing information. global Whether onsets global time units (across runs). blocksplit Whether split onsets blocks. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/split_onsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split onsets — split_onsets","text":"list onset vectors, one per block (unless global=TRUE).","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sub_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"sub_basis — sub_basis","title":"sub_basis — sub_basis","text":"Subset parametric basis regressor.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sub_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sub_basis — sub_basis","text":"","code":"sub_basis(x, subset)  # S3 method for class 'Scale' sub_basis(x, subset)  # S3 method for class 'ScaleWithin' sub_basis(x, subset)  # S3 method for class 'RobustScale' sub_basis(x, subset)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sub_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sub_basis — sub_basis","text":"x object subset subset (logical integer indices)","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/sub_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sub_basis — sub_basis","text":"object class x subset applied.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract term indices — term_indices","title":"Extract term indices — term_indices","text":"Extract term indices","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract term indices — term_indices","text":"","code":"term_indices(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract term indices — term_indices","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract term indices — term_indices","text":"Integer vector list mapping term(s) column indices.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract term matrices — term_matrices","title":"Extract term matrices — term_matrices","text":"Extract term matrices","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract term matrices — term_matrices","text":"","code":"term_matrices(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract term matrices — term_matrices","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract term matrices — term_matrices","text":"list matrices/tibbles, one per term.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract term names — term_names","title":"Extract term names — term_names","text":"Extract term names","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract term names — term_names","text":"","code":"term_names(x, ...)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract term names — term_names","text":"x object. ... Additional arguments.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/term_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract term names — term_names","text":"Character vector term names.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/translate_legacy_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate legacy contrast regex patterns — translate_legacy_pattern","title":"Translate legacy contrast regex patterns — translate_legacy_pattern","text":"Convert older column-naming patterns current naming scheme.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/translate_legacy_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate legacy contrast regex patterns — translate_legacy_pattern","text":"","code":"translate_legacy_pattern(pattern)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/translate_legacy_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate legacy contrast regex patterns — translate_legacy_pattern","text":"pattern Character string legacy regex.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/translate_legacy_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate legacy contrast regex patterns — translate_legacy_pattern","text":"Updated regex string.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/translate_legacy_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate legacy contrast regex patterns — translate_legacy_pattern","text":"","code":"if (FALSE) { # \\dontrun{ # Convert old bracket notation to dot notation translate_legacy_pattern(\"condition[A]\") # Returns \"condition.A\"  # Convert basis notation translate_legacy_pattern(\"term:basis[2]\") # Returns \"term_b2\" } # }"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/trialwise.html","id":null,"dir":"Reference","previous_headings":"","what":"trialwise — trialwise","title":"trialwise — trialwise","text":"Generate one regressor per trial (plus optional grand-mean column) delegating everything hrf().","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/trialwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trialwise — trialwise","text":"","code":"trialwise(   basis = \"spmg1\",   lag = 0,   nbasis = 1,   add_sum = FALSE,   label = \"trial\" )"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/trialwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"trialwise — trialwise","text":"basis, lag, nbasis Passed straight hrf(). add_sum TRUE, append column average trialwise columns (useful conventional main effect). label Term label / prefix generated columns.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/trialwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"trialwise — trialwise","text":"hrfspec term used RHS event-model formula.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/trialwise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"trialwise — trialwise","text":"Use RHS event-model formula:","code":"onset ~ trialwise(basis = \"spmg1\", add_sum = TRUE)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/unit_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit Contrast — unit_contrast","title":"Unit Contrast — unit_contrast","text":"Construct contrast sums 1 used define contrasts baseline.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/unit_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit Contrast — unit_contrast","text":"","code":"unit_contrast(A, name, where = NULL)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/unit_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit Contrast — unit_contrast","text":"formula representing contrast expression. name character string specifying name contrast. optional formula specifying subset conditions apply contrast .","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/unit_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit Contrast — unit_contrast","text":"unit_contrast_spec object containing contrast sums 1.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/unit_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unit Contrast — unit_contrast","text":"","code":"# Test main effect of Face against baseline con <- unit_contrast(~ Face, name=\"Main_face\")  # Test main effect within specific blocks con2 <- unit_contrast(~ Face, name=\"Face_early\", where = ~ block <= 3)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/validate_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate contrast weights against a design matrix or event model — validate_contrasts","title":"Validate contrast weights against a design matrix or event model — validate_contrasts","text":"Provides basic diagnostics t- F-contrasts design matrix available. can either pass event_model (validate attached contrasts) design matrix plus custom weights.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/validate_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate contrast weights against a design matrix or event model — validate_contrasts","text":"","code":"validate_contrasts(x, weights = NULL, tol = 1e-08)"},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/validate_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate contrast weights against a design matrix or event model — validate_contrasts","text":"x event_model numeric matrix/data.frame design matrix. weights Optional contrast weights. May numeric vector (t-contrast), numeric matrix (F-contrast columns contrast vectors), named list mapping names vectors/matrices. NULL x event_model, attached t- F-contrasts validated. tol Numeric tolerance zero checks. Default 1e-8.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/validate_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate contrast weights against a design matrix or event model — validate_contrasts","text":"data.frame one row per validated contrast column following columns: name, type (\"t\" \"F\"), estimable, sum_to_zero, orthogonal_to_intercept, full_rank (F ), nonzero_weights.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/validate_contrasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate contrast weights against a design matrix or event model — validate_contrasts","text":"Checks include: Estimability: whether contrast column lies row space X. Sum--zero: whether weights sum ~0 (t-contrasts ). Intercept orthogonality: whether weights intercept-like columns ~0. Full-rank (F ): whether F-contrast matrix full column rank.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/reference/validate_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate contrast weights against a design matrix or event model — validate_contrasts","text":"","code":"if (FALSE) { # \\dontrun{ # Validate all attached contrasts on a model res <- validate_contrasts(emodel)  # Validate a custom vector against a model v <- rep(0, ncol(design_matrix(emodel))); v[1] <- 1; v[2] <- -1 res2 <- validate_contrasts(emodel, weights = v)  # Validate a custom matrix against a design matrix X <- as.matrix(design_matrix(emodel)) C <- cbind(c(1,-1,rep(0, ncol(X)-2)), c(0,1,-1,rep(0, ncol(X)-3))) res3 <- validate_contrasts(X, weights = C) } # }"},{"path":"https://bbuchsbaum.github.io/fmridesign/vignette_issues.html","id":null,"dir":"","previous_headings":"","what":"Vignette Issues Summary - RESOLVED","title":"Vignette Issues Summary - RESOLVED","text":"vignettes fmridesign successfully updated work split package architecture.","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/vignette_issues.html","id":"issues-found-and-fixed","dir":"","previous_headings":"","what":"Issues Found and Fixed:","title":"Vignette Issues Summary - RESOLVED","text":"internal function .memo_hrf fmrihrf calls evaluate() without namespace prefix evaluate package loaded (knitr vignette building), masks fmrihrf’s evaluate causes “find function {” error evaluate::evaluate expects different arguments FIXED fmrihrf changing evaluate(hrf, times) fmrihrf::evaluate(hrf, times) .memo_hrf onsets.Reg - FIXED using direct field access reg$onsets blockids.sampling_frame - FIXED: method exists fmrihrf FIXED: Changed library(fmridesign) FIXED: Added time blockids fields using fmrihrf::samples() fmrihrf::blockids() FIXED: Removed a_07_trialwise.Rmd fmridesign plot() method event_model implemented - FIXED disabling plot calls design_map() method event_model implemented - FIXED disabling calls","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/fmridesign/vignette_issues.html","id":"remaining-recommendations","dir":"","previous_headings":"","what":"Remaining Recommendations:","title":"Vignette Issues Summary - RESOLVED","text":"✓ Fixed namespace bug fmrihrf’s .memo_hrf function Review vignettes ensure use functionality available fmridesign Use reg$onsets instead onsets(reg) regressor objects Add time blockids sampling_frame plotting Use correct term names (“drift” “poly”) Consider whether vignettes fmrihrf instead Test vignettes fixes complete","code":""},{"path":"https://bbuchsbaum.github.io/fmridesign/vignette_issues.html","id":"fixed-issues","dir":"","previous_headings":"","what":"Fixed Issues:","title":"Vignette Issues Summary - RESOLVED","text":"✓ Package loading - changed library(fmrireg) library(fmridesign) ✓ Direct field access regressor objects (reg$onsets) ✓ Added time blockids sampling_frame baseline_model plotting ✓ Updated term names baseline_model vignette ✓ Removed a_07_trialwise.Rmd belongs fmrireg","code":""}]
