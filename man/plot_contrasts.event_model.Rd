% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contrast.R
\name{plot_contrasts.event_model}
\alias{plot_contrasts.event_model}
\title{plot_contrasts.event_model}
\usage{
\method{plot_contrasts}{event_model}(
  x,
  absolute_limits = FALSE,
  rotate_x_text = TRUE,
  scale_mode = c("auto", "diverging", "one_sided"),
  coord_fixed = TRUE,
  ...
)
}
\arguments{
\item{x}{An \code{event_model} with (lazily) defined contrasts.}

\item{absolute_limits}{Logical; if \code{TRUE}, the color scale is fixed at (-1,1).
If \code{FALSE}, the range is set to (min, max) of the weights.}

\item{rotate_x_text}{Logical; if \code{TRUE}, rotate x-axis labels for readability.}

\item{scale_mode}{Character; 'auto', 'diverging', or 'one_sided' color scaling.}

\item{coord_fixed}{Logical; if TRUE, use fixed aspect ratio.}

\item{...}{Further arguments passed to \code{geom_tile}, e.g. \code{color="grey80"}.}
}
\value{
A \code{ggplot2} object (a heatmap).
}
\description{
Produces a heatmap of all contrasts defined for an \code{event_model}.
Rows = each contrast (or column of an F-contrast), columns = each regressor in
the full design matrix, and the fill color = the contrast weight.
}
\examples{
# Create experimental data
des <- data.frame(onset = c(5, 15, 25, 35, 45),
                  run = rep(1, 5),
                  condition = factor(c("A", "B", "C", "A", "B")))

sframe <- fmrihrf::sampling_frame(blocklens = 50, TR = 2)

# Event model with contrasts 
model <- event_model(onset ~ hrf(condition, 
                                contrasts = list(
                                  A_vs_B = pair_contrast(~ condition == "A",
                                                        ~ condition == "B", 
                                                        name = "A_vs_B"),
                                  main = oneway_contrast(~ condition, name = "main_effect")
                                )),
                    data = des, block = ~run, sampling_frame = sframe)

# Create contrast heatmap
if (requireNamespace("ggplot2", quietly = TRUE)) {
  p1 <- plot_contrasts(model)
  
  # Customize the plot
  p2 <- plot_contrasts(model, 
                      absolute_limits = TRUE,
                      scale_mode = "diverging",
                      rotate_x_text = FALSE)
  print(p1)
}
}
