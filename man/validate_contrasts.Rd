% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate.R
\name{validate_contrasts}
\alias{validate_contrasts}
\title{Validate contrast weights against a design matrix or event model}
\usage{
validate_contrasts(x, weights = NULL, tol = 1e-08)
}
\arguments{
\item{x}{An \code{event_model} or a numeric matrix/data.frame design matrix.}

\item{weights}{Optional contrast weights. May be a numeric vector (t-contrast),
a numeric matrix (F-contrast with columns as contrast vectors), or a named
list mapping names to vectors/matrices. If \code{NULL} and \code{x} is an \code{event_model},
all attached t- and F-contrasts are validated.}

\item{tol}{Numeric tolerance for zero checks. Default \code{1e-8}.}
}
\value{
A data.frame with one row per validated contrast column and the
following columns: \code{name}, \code{type} ("t" or "F"), \code{estimable},
\code{sum_to_zero}, \code{orthogonal_to_intercept}, \code{full_rank} (F only), and
\code{nonzero_weights}.
}
\description{
Provides basic diagnostics for t- and F-contrasts once the design matrix
is available. You can either pass an \code{event_model} (to validate all attached
contrasts) or a design matrix plus custom weights.
}
\details{
Checks include:
\itemize{
\item Estimability: whether each contrast column lies in the row space of \code{X}.
\item Sum-to-zero: whether the weights sum to ~0 (t-contrasts only).
\item Intercept orthogonality: whether weights on intercept-like columns are ~0.
\item Full-rank (F only): whether an F-contrast matrix has full column rank.
}
}
\examples{
# Create sample event data with contrasts
events <- data.frame(
  onset = c(2, 6, 10, 14, 18),
  condition = factor(c("A", "B", "A", "B", "C")),
  rt = c(0.5, 0.8, 0.6, 0.9, 0.7),
  block = c(1, 1, 2, 2, 2)
)

# Create sampling frame
sf <- fmrihrf::sampling_frame(blocklens = c(10, 10), TR = 2)

# Create contrast specifications
con1 <- pair_contrast(~ condition == "A", ~ condition == "B", name = "A_vs_B")

# Create event model with contrasts
model <- event_model(
  onset ~ hrf(condition, contrasts = list(con1)),
  data = events,
  block = ~block,
  sampling_frame = sf
)

# Validate all attached contrasts
validation_results <- validate_contrasts(model)
validation_results

# Validate custom contrast vector
dm <- design_matrix(model)
custom_contrast <- rep(0, ncol(dm))
custom_contrast[1] <- 1
custom_contrast[2] <- -1

custom_validation <- validate_contrasts(dm, weights = custom_contrast)
custom_validation
}
