<?xml version="1.0" encoding="UTF-8"?>
<golden_test xmlns="http://golden-tests.org/schema">
  <metadata>
    <id>basis_functions_parameter_sensitivity</id>
    <version>1.0</version>
    <description>Test parameter sensitivity and robustness of basis functions across implementations</description>
    <tags>
      <tag>basis_functions</tag>
      <tag>parameter_sensitivity</tag>
      <tag>robustness</tag>
      <tag>cross_language</tag>
    </tags>
  </metadata>
  
  <semantic_description>
    <purpose>Verify that basis functions behave consistently across different parameter combinations and edge cases</purpose>
    <algorithm>
      1. Test B-splines with high degree (7) on short time series (30 points)
      2. Verify numerical stability and well-conditioning
      3. Test edge case: degree close to time series length
      4. Verify that mathematical properties are preserved under parameter changes
      5. Test boundary behavior and extrapolation consistency
      6. Ensure implementations handle edge cases gracefully
    </algorithm>
    <mathematical_background>
      Parameter sensitivity testing ensures that basis functions:
      - Maintain mathematical properties across parameter ranges
      - Handle edge cases gracefully (high degrees, short series)
      - Preserve numerical stability and conditioning
      - Show consistent behavior across implementations
      - Avoid numerical instabilities or pathological cases
    </mathematical_background>
    <references>
      <reference>Wahba, G. (1990). Spline Models for Observational Data. SIAM.</reference>
      <reference>Wood, S. N. (2017). Generalized Additive Models: An Introduction with R. CRC Press.</reference>
    </references>
  </semantic_description>
  
  <inputs>
    <sampling_frame>
      <block_lengths>30</block_lengths>  <!-- Short time series -->
      <TR>2.0</TR>
    </sampling_frame>
    
    <model_params>
      <basis_type>bs</basis_type>
      <degree>7</degree>  <!-- High degree relative to time series length -->
      <intercept>true</intercept>
    </model_params>
  </inputs>
  
  <expected_outputs>
    <design_matrix>
      <dimensions>
        <rows>30</rows>
        <columns>8</columns>  <!-- 7 B-spline basis functions + global intercept -->
      </dimensions>
      <column_names>
        <name>base_bs1_block_1</name>
        <name>base_bs2_block_1</name>
        <name>base_bs3_block_1</name>
        <name>base_bs4_block_1</name>
        <name>base_bs5_block_1</name>
        <name>base_bs6_block_1</name>
        <name>base_bs7_block_1</name>
        <name>constant_global</name>
      </column_names>
      <numeric_checks>
        <!-- 1. FUNDAMENTAL PROPERTIES: Non-negativity should still hold -->
        <check>
          <type>min</type>
          <location>
            <column>0</column>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>B-spline non-negativity preserved with high degree</description>
        </check>
        
        <check>
          <type>min</type>
          <location>
            <column>3</column>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>Middle B-spline non-negativity preserved with high degree</description>
        </check>
        
        <!-- 2. PARTITION OF UNITY: Should still hold in interior -->
        <check>
          <type>row_sum</type>
          <location>
            <row>15</row>
            <column_range>0,6</column_range>  <!-- B-spline columns only -->
          </location>
          <expected>1.0</expected>
          <tolerance>0.01</tolerance>
          <description>Partition of unity preserved in interior with high degree</description>
        </check>
        
        <!-- 3. NUMERICAL STABILITY: Check for reasonable variance -->
        <check>
          <type>std_dev</type>
          <location>
            <column>2</column>
          </location>
          <expected>0.110</expected>
          <tolerance>0.01</tolerance>
          <description>B-spline variance within reasonable bounds for high degree</description>
        </check>
        
        <!-- 4. BOUNDARY BEHAVIOR: Should still have proper boundary conditions -->
        <check>
          <type>exact_value</type>
          <location>
            <column>0</column>
            <row>29</row>  <!-- Last time point -->
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>First B-spline boundary condition preserved</description>
        </check>
        
        <check>
          <type>exact_value</type>
          <location>
            <column>6</column>
            <row>0</row>  <!-- First time point -->
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>Last B-spline boundary condition preserved</description>
        </check>
        
        <!-- 5. SCALING CONSISTENCY: Maximum values should be reasonable -->
        <check>
          <type>max</type>
          <location>
            <column>1</column>
          </location>
          <expected>0.318</expected>
          <tolerance>0.01</tolerance>
          <description>B-spline maximum within reasonable bounds for high degree</description>
        </check>
        
        <!-- 6. CONDITIONING: Check that basis is not ill-conditioned -->
        <!-- Test via column variance - very small variance indicates near-singularity -->
        <check>
          <type>std_dev</type>
          <location>
            <column>4</column>
          </location>
          <expected>0.119</expected>
          <tolerance>0.01</tolerance>
          <description>Middle B-spline has reasonable variance (not near-singular)</description>
        </check>
        
        <!-- 7. EDGE CASE BEHAVIOR: Check center behavior -->
        <check>
          <type>exact_value</type>
          <location>
            <column>3</column>
            <row>15</row>  <!-- Center point -->
          </location>
          <expected>0.282</expected>
          <tolerance>0.01</tolerance>
          <description>Middle B-spline reasonable value at center</description>
        </check>
        
        <!-- 8. INTERCEPT VALIDATION -->
        <check>
          <type>column_sum</type>
          <location>
            <column>7</column>
          </location>
          <expected>30.0</expected>
          <tolerance>0.001</tolerance>
          <description>Global intercept sums correctly for short time series</description>
        </check>
        
        <!-- 9. NUMERICAL PRECISION: Test that very small values are handled correctly -->
        <check>
          <type>exact_value</type>
          <location>
            <column>5</column>
            <row>2</row>  <!-- Near boundary -->
          </location>
          <expected>7.02e-07</expected>
          <tolerance>1e-06</tolerance>
          <description>B-spline handles near-zero values with high precision</description>
        </check>
      </numeric_checks>
    </design_matrix>
  </expected_outputs>
  
  <implementations>
    <R><![CDATA[
library(fmridesign)
library(fmrihrf)

# Create sampling frame with short time series
sframe <- sampling_frame(blocklens = 30, TR = 2.0)

# Create baseline model with high-degree B-spline drift
# This is an edge case: degree 7 with only 30 time points
baseline <- baseline_model(
  sframe = sframe,
  basis = "bs",
  degree = 7
)

# Get design matrix
dm <- design_matrix(baseline)

# Convert to regular matrix for numeric checks
dm_matrix <- as.matrix(dm)
    ]]></R>
  </implementations>
</golden_test>