<?xml version="1.0" encoding="UTF-8"?>
<golden_test xmlns="http://golden-tests.org/schema">
  <metadata>
    <id>basis_functions_bspline_invariants</id>
    <version>1.0</version>
    <description>Test mathematical invariants of B-spline basis functions</description>
    <tags>
      <tag>basis_functions</tag>
      <tag>bspline</tag>
      <tag>mathematical_invariants</tag>
      <tag>cross_language</tag>
    </tags>
  </metadata>
  
  <semantic_description>
    <purpose>Verify that B-spline basis functions satisfy fundamental mathematical properties regardless of implementation</purpose>
    <algorithm>
      1. Generate B-spline basis functions with degree 5 over time series length 80
      2. Verify non-negativity: All values ≥ 0 (fundamental B-spline property)
      3. Verify partition of unity: Row sums = 1 at all time points
      4. Verify local support: Each basis function has finite non-zero support
      5. Verify smoothness: No discontinuities or sharp transitions
      6. Verify boundary behavior: Proper boundary conditions at endpoints
      7. Verify numerical stability: Well-conditioned basis matrix
    </algorithm>
    <mathematical_background>
      B-splines are piecewise polynomials with the following key properties:
      - Non-negativity: B_i(x) ≥ 0 for all i,x
      - Partition of unity: Σ B_i(x) = 1 for all x in domain
      - Local support: B_i(x) = 0 outside specific interval
      - Continuity: C^(p-1) continuous for degree p splines
    </mathematical_background>
    <references>
      <reference>de Boor, C. (1978). A Practical Guide to Splines. Springer-Verlag.</reference>
      <reference>Schumaker, L. (2007). Spline Functions: Basic Theory. Cambridge University Press.</reference>
    </references>
  </semantic_description>
  
  <inputs>
    <sampling_frame>
      <block_lengths>80</block_lengths>
      <TR>2.0</TR>
    </sampling_frame>
    
    <model_params>
      <basis_type>bs</basis_type>
      <degree>5</degree>
      <intercept>true</intercept>
    </model_params>
  </inputs>
  
  <expected_outputs>
    <design_matrix>
      <dimensions>
        <rows>80</rows>
        <columns>6</columns>  <!-- 5 B-spline basis functions + global intercept -->
      </dimensions>
      <column_names>
        <name>base_bs1_block_1</name>
        <name>base_bs2_block_1</name>
        <name>base_bs3_block_1</name>
        <name>base_bs4_block_1</name>
        <name>base_bs5_block_1</name>
        <name>constant_global</name>
      </column_names>
      <numeric_checks>
        <!-- 1. NON-NEGATIVITY: All B-spline values must be ≥ 0 -->
        <check>
          <type>min</type>
          <location>
            <column>0</column>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>B-spline basis function 1: non-negativity property</description>
        </check>
        
        <check>
          <type>min</type>
          <location>
            <column>1</column>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>B-spline basis function 2: non-negativity property</description>
        </check>
        
        <check>
          <type>min</type>
          <location>
            <column>2</column>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>B-spline basis function 3: non-negativity property</description>
        </check>
        
        <check>
          <type>min</type>
          <location>
            <column>3</column>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>B-spline basis function 4: non-negativity property</description>
        </check>
        
        <check>
          <type>min</type>
          <location>
            <column>4</column>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>B-spline basis function 5: non-negativity property</description>
        </check>
        
        <!-- 2. PARTITION OF UNITY: B-spline basis functions sum to 1 in interior of domain -->
        <!-- NOTE: B-splines only satisfy partition of unity in interior, not at boundaries -->
        <check>
          <type>row_sum</type>
          <location>
            <row>50</row>
            <column_range>0,4</column_range>  <!-- Only B-spline columns, not intercept -->
          </location>
          <expected>1.0</expected>
          <tolerance>0.01</tolerance>
          <description>Partition of unity in interior: Σ B_i(t) = 1 at t=51</description>
        </check>
        
        <check>
          <type>row_sum</type>
          <location>
            <row>60</row>
            <column_range>0,4</column_range>
          </location>
          <expected>1.0</expected>
          <tolerance>0.001</tolerance>
          <description>Partition of unity in interior: Σ B_i(t) = 1 at t=61</description>
        </check>
        
        <check>
          <type>row_sum</type>
          <location>
            <row>70</row>
            <column_range>0,4</column_range>
          </location>
          <expected>1.0</expected>
          <tolerance>0.001</tolerance>
          <description>Partition of unity in interior: Σ B_i(t) = 1 at t=71</description>
        </check>
        
        <!-- Verify boundary behavior where partition of unity does NOT hold -->
        <check>
          <type>row_sum</type>
          <location>
            <row>0</row>
            <column_range>0,4</column_range>
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>Boundary condition: Σ B_i(t) = 0 at t=1 (first time point)</description>
        </check>
        
        <!-- 3. LOCAL SUPPORT: Each basis function should have maximum value within reasonable bounds -->
        <check>
          <type>max</type>
          <location>
            <column>0</column>
          </location>
          <expected>0.410</expected>
          <tolerance>0.01</tolerance>
          <description>First B-spline maximum within expected bounds</description>
        </check>
        
        <check>
          <type>max</type>
          <location>
            <column>2</column>
          </location>
          <expected>0.346</expected>
          <tolerance>0.01</tolerance>
          <description>Middle B-spline maximum within expected bounds</description>
        </check>
        
        <!-- 4. BOUNDARY BEHAVIOR: B-splines should have proper boundary values -->
        <check>
          <type>exact_value</type>
          <location>
            <column>0</column>
            <row>79</row>  <!-- Last time point -->
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>First B-spline boundary condition at end</description>
        </check>
        
        <check>
          <type>exact_value</type>
          <location>
            <column>4</column>
            <row>0</row>  <!-- First time point -->
          </location>
          <expected>0.0</expected>
          <tolerance>0.001</tolerance>
          <description>Last B-spline boundary condition at start</description>
        </check>
        
        <!-- 5. INTERCEPT VALIDATION: Global intercept should be constant -->
        <check>
          <type>column_sum</type>
          <location>
            <column>5</column>
          </location>
          <expected>80.0</expected>
          <tolerance>0.001</tolerance>
          <description>Global intercept sums to number of time points</description>
        </check>
        
        <!-- 6. NUMERICAL STABILITY: Check that basis functions have reasonable scale -->
        <check>
          <type>std_dev</type>
          <location>
            <column>1</column>
          </location>
          <expected>0.126</expected>
          <tolerance>0.01</tolerance>
          <description>B-spline basis function has reasonable variance</description>
        </check>
      </numeric_checks>
    </design_matrix>
  </expected_outputs>
  
  <implementations>
    <R><![CDATA[
library(fmridesign)
library(fmrihrf)

# Create sampling frame
sframe <- sampling_frame(blocklens = 80, TR = 2.0)

# Create baseline model with B-spline drift
baseline <- baseline_model(
  sframe = sframe,
  basis = "bs",
  degree = 5
)

# Get design matrix
dm <- design_matrix(baseline)

# Convert to regular matrix for numeric checks
dm_matrix <- as.matrix(dm)
    ]]></R>
  </implementations>
</golden_test>