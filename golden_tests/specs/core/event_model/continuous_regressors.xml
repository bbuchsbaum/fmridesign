<?xml version="1.0" encoding="UTF-8"?>
<golden_test xmlns="http://golden-tests.org/schema">
  <metadata>
    <id>event_model_continuous_regressors</id>
    <version>1.0</version>
    <description>Test parametric modulation with continuous regressors</description>
    <tags>
      <tag>event_model</tag>
      <tag>parametric</tag>
      <tag>continuous</tag>
      <tag>modulation</tag>
    </tags>
  </metadata>
  
  <semantic_description>
    <purpose>Verify that continuous variables can modulate HRF amplitude correctly</purpose>
    <algorithm>
      1. Create events with associated continuous values (e.g., reaction time, stimulus intensity)
      2. Use continuous values to parametrically modulate HRF amplitude
      3. Optionally orthogonalize parametric regressors with respect to main effect
      4. Verify that modulated responses scale with parameter values
      5. Check both linear and polynomial parametric modulations
    </algorithm>
    <references>
      <reference>BÃ¼chel et al. (1998). Characterizing stimulus-response functions using nonlinear regressors in parametric fMRI experiments. NeuroImage, 8(2), 140-148.</reference>
    </references>
  </semantic_description>
  
  <inputs>
    <sampling_frame>
      <block_lengths>100</block_lengths>
      <TR>2.0</TR>
    </sampling_frame>
    
    <events>
      <event>
        <onset>10.0</onset>
        <condition>stim</condition>
        <rt>0.5</rt>
        <intensity>1.0</intensity>
        <block>1</block>
        <duration>0.0</duration>
      </event>
      <event>
        <onset>25.0</onset>
        <condition>stim</condition>
        <rt>0.8</rt>
        <intensity>2.0</intensity>
        <block>1</block>
        <duration>0.0</duration>
      </event>
      <event>
        <onset>40.0</onset>
        <condition>stim</condition>
        <rt>0.3</rt>
        <intensity>3.0</intensity>
        <block>1</block>
        <duration>0.0</duration>
      </event>
      <event>
        <onset>55.0</onset>
        <condition>stim</condition>
        <rt>0.6</rt>
        <intensity>4.0</intensity>
        <block>1</block>
        <duration>0.0</duration>
      </event>
      <event>
        <onset>70.0</onset>
        <condition>stim</condition>
        <rt>0.4</rt>
        <intensity>5.0</intensity>
        <block>1</block>
        <duration>0.0</duration>
      </event>
    </events>
    
    <model_params>
      <hrf_basis>canonical</hrf_basis>
      <precision>0.3</precision>
      <model_formula>onset ~ hrf(condition) + hrf(rt) + hrf(poly(intensity, 2))</model_formula>
    </model_params>
  </inputs>
  
  <expected_outputs>
    <design_matrix>
      <dimensions>
        <rows>100</rows>
        <columns>4</columns>
      </dimensions>
      <column_names>
        <name>condition_condition.stim</name>
        <name>rt_rt</name>
        <name>poly_intensity_2_X1</name>
        <name>poly_intensity_2_X2</name>
      </column_names>
      <numeric_checks>
        <!-- Main effect column should sum to expected value -->
        <check>
          <type>column_sum</type>
          <location>
            <column>0</column>
          </location>
          <expected>24.587</expected>
          <tolerance>0.01</tolerance>
          <description>Sum of main effect (5 events)</description>
        </check>
        
        <!-- RT parametric modulator mean value -->
        <check>
          <type>mean</type>
          <location>
            <column>1</column>
          </location>
          <expected>0.128</expected>
          <tolerance>0.01</tolerance>
          <description>Mean of RT modulator</description>
        </check>
        
        <!-- Check standard deviation of polynomial terms -->
        <check>
          <type>std_dev</type>
          <location>
            <column>2</column>
          </location>
          <expected>0.248</expected>
          <tolerance>0.01</tolerance>
          <description>Standard deviation of linear polynomial term</description>
        </check>
        
        <!-- Verify parametric scaling -->
        <check>
          <type>peak_value</type>
          <location>
            <column>1</column>
            <row_range>14,16</row_range>
          </location>
          <expected>1.281</expected>
          <tolerance>0.01</tolerance>
          <description>Peak of RT-modulated response for high RT event</description>
        </check>
      </numeric_checks>
    </design_matrix>
  </expected_outputs>
  
  <implementations>
    <R><![CDATA[
library(fmridesign)
library(fmrihrf)

# Create sampling frame
sframe <- sampling_frame(blocklens = 100, TR = 2.0)

# Create event data with continuous regressors
event_data <- data.frame(
  onset = c(10.0, 25.0, 40.0, 55.0, 70.0),
  condition = factor(rep("stim", 5)),
  rt = c(0.5, 0.8, 0.3, 0.6, 0.4),
  intensity = c(1.0, 2.0, 3.0, 4.0, 5.0),
  block = rep(1, 5)
)

# Create event model with main effect and parametric modulators
# Note: poly() creates orthogonal polynomials
ev_model <- event_model(
  onset ~ hrf(condition) + hrf(rt) + hrf(poly(intensity, 2)),
  data = event_data,
  block = ~block,
  sampling_frame = sframe,
  precision = 0.3
)

# Get design matrix
dm <- design_matrix(ev_model)

# Convert to regular matrix for numeric checks
dm_matrix <- as.matrix(dm)
    ]]></R>
  </implementations>
</golden_test>